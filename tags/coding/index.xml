<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Coding on Unlogic </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://unlogic.co.uk/tags/coding/</link>
    
    
    
    <updated>Mon, 05 Jan 2015 00:00:00 UTC</updated>
    
    <item>
      <title>[dis]like</title>
      <link>http://unlogic.co.uk/2015/01/05/dislike/</link>
      <pubDate>Mon, 05 Jan 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/01/05/dislike/</guid>
      <description>Isn&amp;rsquo;t it just like me to start a new year with a post titled &amp;ldquo;[dis]like&amp;rdquo;? It&amp;rsquo;s not as bad as it sounds. I want to write about coding challenge sites and what I like and dislike about them, specifically regarding Python challenges. What I Like I take part in coding challenges regularily for various reasons and I get a great deal of benefit from them. Albeit some challenges are a bit contrived, they do offer some great practice in problem solving and writing clean code.</description>
    </item>
    
    <item>
      <title>Effort Vs Benefit</title>
      <link>http://unlogic.co.uk/2014/03/12/effort-vs-benefit/</link>
      <pubDate>Wed, 12 Mar 2014 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2014/03/12/effort-vs-benefit/</guid>
      <description>How often have you thought: &amp;ldquo;Everything would be a lot better if this tool worked faster&amp;rdquo;? Probably quite often. You&amp;rsquo;ve most likely also heard the saying &amp;ldquo;Don&amp;rsquo;t optimise prematurely&amp;rdquo;. It&amp;rsquo;s true, there&amp;rsquo;s no point making something faster if you don&amp;rsquo;t know it&amp;rsquo;s too slow. Don&amp;rsquo;t waste time on trying to optimise before you get some metrics telling you it needs it. What you might not have thought about though is whether the speed increase is actually worth it.</description>
    </item>
    
  </channel>
</rss>

