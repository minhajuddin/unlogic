<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Posts on Unlogic </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://unlogic.co.uk/post/</link>
    
    
    
    <updated>Fri, 04 Dec 2015 00:00:00 UTC</updated>
    
    <item>
      <title>Brewing with a Pi</title>
      <link>http://unlogic.co.uk/2015/12/04/brewing-with-a-pi/</link>
      <pubDate>Fri, 04 Dec 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/12/04/brewing-with-a-pi/</guid>
      <description>It&amp;rsquo;s been a while since I&amp;rsquo;ve written here, but that doesn&amp;rsquo;t mean I haven&amp;rsquo;t been busy. I&amp;rsquo;ve been working on a DIY version of Speidel&amp;rsquo;s Braumeister and the software side of things has come along quite nicely. The idea is to have a Raspberry Pi controlled beer brewing system for cooking the wort across a temperature profile. Much like the Braumeister, or Grainfather style brewers. A probe monitors the temperature and will switch the heating on and off to maintain the current temperature.</description>
    </item>
    
    <item>
      <title>SpyderSec solution</title>
      <link>http://unlogic.co.uk/2015/09/09/spydersec-solution/</link>
      <pubDate>Wed, 09 Sep 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/09/09/spydersec-solution/</guid>
      <description>Another day, another VM. Today it&amp;rsquo;s the SpyderSec Challenge So let me start it up and get on it. As per usual I need the IP of the machine and the services it has running (if any). Straight from the Unlogic Cookbook root@kali:~/Downloads# nmap -sn 192.168.56.0/24 Starting Nmap 6.49BETA4 ( https://nmap.org ) at 2015-09-09 16:07 BST Nmap scan report for 192.168.56.1 Host is up (0.00039s latency). MAC Address: 0A:00:27:00:00:00 (Unknown) Nmap scan report for 192.168.56.100 Host is up (0.00017s latency).</description>
    </item>
    
    <item>
      <title>Extracting bup files in Linux</title>
      <link>http://unlogic.co.uk/2015/09/03/extracting-bup-files-in-linux/</link>
      <pubDate>Thu, 03 Sep 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/09/03/extracting-bup-files-in-linux/</guid>
      <description>I recently got hold of some malware that got snapped up by McAfee and stored in a bup file. Keen to take a look at it, I researched how to &amp;lsquo;unbup&amp;rsquo; files and found this page: http://blog.opensecurityresearch.com/2012/07/unbup-mcafee-bup-extractor-for-linux.html A slow bash script? A faster script in Perl? No, that won&amp;rsquo;t do. Rather than search for a Python implementation I decided to use this as an opportunity to write something, and thus my unbup.py was born.</description>
    </item>
    
    <item>
      <title>Nullbyte 1 solution</title>
      <link>http://unlogic.co.uk/2015/08/25/nullbyte-1-solution/</link>
      <pubDate>Tue, 25 Aug 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/08/25/nullbyte-1-solution/</guid>
      <description>I&amp;rsquo;ve been AFK for a while because of various reasons, but now I&amp;rsquo;m back and have managed to scrape a little time together to get on with some of Vulnhub&amp;rsquo;s new VMs. So let&amp;rsquo;s start with Nullbyte 1 Stage 1 I ran the usual service discovery and found: root@kali:~# nmap -sV 192.168.56.101 Starting Nmap 6.49BETA4 ( https://nmap.org ) at 2015-08-25 11:29 BST Nmap scan report for 192.168.56.101 Host is up (0.00057s latency).</description>
    </item>
    
    <item>
      <title>Honeypotting with Dionaea and Raspi</title>
      <link>http://unlogic.co.uk/2015/07/16/honeypotting-with-dionaea-and-raspi/</link>
      <pubDate>Thu, 16 Jul 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/07/16/honeypotting-with-dionaea-and-raspi/</guid>
      <description>I recently setup a dionaea honeypot on my Raspberry Pi and after tweaking and configuring it for a few days have now got a working setup. It&amp;rsquo;s a low interaction honeypot aimed to capture malware rather than ssh bruteforce attacks. I plan to leave it online for a week or a month, and the analyse the stats and see what it managed to collect. So far it&amp;rsquo;s mostly conficker variants, but there&amp;rsquo;s a suprising (to me) large number of infected machines out there.</description>
    </item>
    
    <item>
      <title>Infosec Institute CTF2.0</title>
      <link>http://unlogic.co.uk/2015/06/25/infosec-institute-ctf2-dot-0/</link>
      <pubDate>Thu, 25 Jun 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/06/25/infosec-institute-ctf2-dot-0/</guid>
      <description>The folks over at the Infosec Institue have released their second CTF. Here&amp;rsquo;s how I got on&amp;hellip; Level 01 In level 01 I am supposed to use the provided form to perform a cross site scripting exploit. Here&amp;rsquo;s what the form looks like: At first I might as well test how the form works. Entering something like test and www.test.com in the fields simply adds the supplied information to the column on the left.</description>
    </item>
    
    <item>
      <title>Vulnhub Darknet1.0 write up</title>
      <link>http://unlogic.co.uk/2015/06/08/vulnhub-darknet1-dot-0-write-up/</link>
      <pubDate>Mon, 08 Jun 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/06/08/vulnhub-darknet1-dot-0-write-up/</guid>
      <description>Darknet 1.0 by q3rv0 isn&amp;rsquo;t easy&amp;hellip; for me anyway. With some help and lots of reading I did however get to the bottom of it. Here&amp;rsquo;s my journey Stage 1 First things first: scan the target root@kali:~# nmap -sV -p- 192.168.56.106 Starting Nmap 6.47 ( http://nmap.org ) at 2015-06-03 12:57 BST Nmap scan report for darknet.com (192.168.56.106) Host is up (0.00017s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.2.22 ((Debian)) 111/tcp open rpcbind 2-4 (RPC #100000) 57664/tcp open status 1 (RPC #100024) MAC Address: 08:00:27:E5:9F:EC (Cadmus Computer Systems) Service detection performed.</description>
    </item>
    
    <item>
      <title>Hacky Easter 2015</title>
      <link>http://unlogic.co.uk/2015/06/01/hacky-easter-2015/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/06/01/hacky-easter-2015/</guid>
      <description>Another year, another Hacky Easter and a month, of fun, learning, and frustrations. All in all this was another great year and I&amp;rsquo;m already looking forward to 2016&amp;rsquo;s edition. I found this year&amp;rsquo;s challenges were a bit harder than last year, but I did my best. Challenge 01 I&amp;rsquo;m told to search out the password in the following image Taking note of the missing letters and rearranging them to spell HACKERZ I&amp;rsquo;ll enter that into the egg-o-matic and see what happens.</description>
    </item>
    
    <item>
      <title>Burnmail: temporary mail forwarding</title>
      <link>http://unlogic.co.uk/2015/05/29/burnmail-temporary-mail-forwarding/</link>
      <pubDate>Fri, 29 May 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/05/29/burnmail-temporary-mail-forwarding/</guid>
      <description>A while back I got curious about how easy it would be to setup a temporary email forwarding service, akin to Meltmail. So I got to it and made it. In essence you will create a temporary email address that will forward all mail it receives to your inbox. Once it expires, it drops all incoming mail. It&amp;rsquo;s pretty much ready now, hence why I am posting about it. The differences between Burnmail (yeah, best I could do for now) and other services is: forwarding can be expired by time or by number of received mails all tasks are accomplished through email.</description>
    </item>
    
    <item>
      <title>I made this: Purplescraper</title>
      <link>http://unlogic.co.uk/2015/05/14/i-made-this-purplescraper/</link>
      <pubDate>Thu, 14 May 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/05/14/i-made-this-purplescraper/</guid>
      <description>Had this script sitting around for a while and I figured I would clean it up a bit and share it. Get Purplescraper from my Github In short: you give it a starting directory, which will usually be where all the user directories are, and it will go get all .purple/accounts.xml files and extract any usernames and passwords it finds into a new file. Useful to make sure none of your sensitive data is available to other, non authorised users via slack file permissions.</description>
    </item>
    
    <item>
      <title>The joys of server ownership</title>
      <link>http://unlogic.co.uk/2015/05/08/the-joys-of-server-ownership/</link>
      <pubDate>Fri, 08 May 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/05/08/the-joys-of-server-ownership/</guid>
      <description>This post serves mostly as a &amp;ldquo;note to self&amp;rdquo;. I just ordered myself a super cheap VPS from Ramnode as I have a little project I would like to setup and see if I can make it work. But first I had to setup the server (Debian 7.0) and it&amp;rsquo;s been a while since I&amp;rsquo;ve done that, so some reading was in order to remind myself of all the joys. Thus I decided to note this down for myself and anyone else who&amp;rsquo;s interested.</description>
    </item>
    
    <item>
      <title>How&#39;s that Pizza coming along?</title>
      <link>http://unlogic.co.uk/2015/04/15/hows-that-pizza-coming-along/</link>
      <pubDate>Wed, 15 Apr 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/04/15/hows-that-pizza-coming-along/</guid>
      <description>UPDATE: Published what I have done so far on my Github Having been a bit busy with other things recently, I&amp;rsquo;ve not mentioned the Domino&amp;rsquo;s thing for a while. So in case anyone is wondering where I am with this: Basically I&amp;rsquo;ve reworked how the store finder works. I&amp;rsquo;ve collapsed the whole store finding and delivery postcode stuff into one locate_store call. Enter your postcode and it&amp;rsquo;ll get the nearest delivery capable store and select it.</description>
    </item>
    
    <item>
      <title>Revisiting strong passwords</title>
      <link>http://unlogic.co.uk/2015/04/14/revisiting-strong-passwords/</link>
      <pubDate>Tue, 14 Apr 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/04/14/revisiting-strong-passwords/</guid>
      <description>Some time ago I wrote a post about strong passwords. That was three years ago and I figured I might as well revist what I wrote back then. Since then technology has moved on a lot, and the number of password breaches has increased, aswell as the number of reports mocking our poorly chosen passwords. As far as I am concerned, I am still using 15-18 random character passwords. I&amp;rsquo;m no longer lowercase only, but a mixture of upper, lower, digit, and punctuation.</description>
    </item>
    
    <item>
      <title>Solving Narnia Part 2</title>
      <link>http://unlogic.co.uk/2015/04/13/solving-narnia-part-2/</link>
      <pubDate>Mon, 13 Apr 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/04/13/solving-narnia-part-2/</guid>
      <description>Carrying on from Part 1 Level 05 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; #include &amp;lt;string.h&amp;gt; int main(int argc, char **argv){ int i = 1; char buffer[64]; snprintf(buffer, sizeof buffer, argv[1]); buffer[sizeof (buffer) - 1] = 0; printf(&amp;quot;Change i&amp;#39;s value from 1 -&amp;gt; 500. &amp;quot;); if(i==500){ printf(&amp;quot;GOOD\n&amp;quot;); system(&amp;quot;/bin/sh&amp;quot;); } printf(&amp;quot;No way...let me give you a hint!\n&amp;quot;); printf(&amp;quot;buffer : [%s] (%d)\n&amp;quot;, buffer, strlen(buffer)); printf (&amp;quot;i = %d (%p)\n&amp;quot;, i, &amp;amp;i); return 0; } A fixed sized buffer again.</description>
    </item>
    
    <item>
      <title>Vulnhub&#39;s &#39;TopHatSec Freshly&#39;</title>
      <link>http://unlogic.co.uk/2015/04/11/vulnhubs-freshly/</link>
      <pubDate>Sat, 11 Apr 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/04/11/vulnhubs-freshly/</guid>
      <description>This is my first writeup of a Vulnhub wargame: Freshly. The challenge is: The goal of this challenge is to break into the machine via the web and find the secret hidden in a sensitive file. Go grab the image and follow along. First I need to determine the image&amp;rsquo;s IP address and what services it is running: root@kali:~# nmap -sn 192.168.56.0/24 Starting Nmap 6.47 ( http://nmap.org ) at 2015-04-10 18:19 BST Nmap scan report for 192.168.56.1 Host is up (0.00019s latency).</description>
    </item>
    
  </channel>
</rss>

