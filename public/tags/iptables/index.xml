<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Iptables on Unlogic</title>
    <link>https://svenito.github.io/nowhere/tags/iptables/</link>
    <description>Recent content in Iptables on Unlogic</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 08 May 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://svenito.github.io/nowhere/tags/iptables/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The joys of server ownership</title>
      <link>https://svenito.github.io/nowhere/2015/05/08/the-joys-of-server-ownership/</link>
      <pubDate>Fri, 08 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://svenito.github.io/nowhere/2015/05/08/the-joys-of-server-ownership/</guid>
      <description>

&lt;p&gt;This post serves mostly as a &amp;ldquo;note to self&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;I just ordered myself a super cheap VPS from &lt;a href=&#34;http://ramnode.com&#34;&gt;Ramnode&lt;/a&gt; as I have
a little project I would like to setup and see if I can make it work.&lt;/p&gt;

&lt;p&gt;But first I had to setup the server (Debian 7.0) and it&amp;rsquo;s been a while since I&amp;rsquo;ve done that, so
some reading was in order to remind myself of all the joys. Thus I decided to note this
down for myself and anyone else who&amp;rsquo;s interested. So it&amp;rsquo;s not an in depth explanation
by any means.&lt;/p&gt;

&lt;h2 id=&#34;securing:5917a0b95cbd7d2b1be5f00f2236d291&#34;&gt;Securing&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m not looking for bullet proof as this won&amp;rsquo;t be a production server and won&amp;rsquo;t
hold any sensitive info, but I&amp;rsquo;d like to know that it&amp;rsquo;s at least somewhat locked
down.&lt;/p&gt;

&lt;p&gt;So first off install &lt;a href=&#34;http://www.fail2ban.org/wiki/index.php/Main_Page&#34;&gt;Fail2ban&lt;/a&gt;. This
will lock out users who fail to authenticate too often. Ramnode actually have a
&lt;a href=&#34;https://www.youtube.com/watch?v=GmVoqFv_lGU&#34;&gt;good video on this&lt;/a&gt;. As we&amp;rsquo;ll
only allow key based authentication it&amp;rsquo;s a bit redundant, but if you want to
go that way, there&amp;rsquo;s the info.&lt;/p&gt;

&lt;p&gt;Then turn off password authentication for SSH as I&amp;rsquo;ll be using only keys to
authenticate. Edit &lt;code&gt;/etc/ssh/sshd_conf&lt;/code&gt; and change the following lines to read:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;ChallengeResponseAuthentication no
PasswordAuthentication no
UsePAM no
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Make sure you have uploaded your &lt;a href=&#34;https://help.ubuntu.com/community/SSH/OpenSSH/Keys&#34;&gt;public key&lt;/a&gt; to
&lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; and set the permissions on &lt;code&gt;.ssh&lt;/code&gt; and &lt;code&gt;authorized_keys&lt;/code&gt; on the
server to &lt;code&gt;700&lt;/code&gt; and &lt;code&gt;600&lt;/code&gt; respectively.&lt;/p&gt;

&lt;p&gt;I also changed the default SSH port to something else, as that already keeps the number of automated
bruteforcers down. Do this by changing the following line in &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Port 22
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Set it to anything that doesn&amp;rsquo;t clash with other services. i.e. not 25 or 80 for example.&lt;/p&gt;

&lt;p&gt;Once configured &lt;code&gt;sudo service sshd reload&lt;/code&gt; to pick up the changes.&lt;/p&gt;

&lt;p&gt;So next up &lt;code&gt;iptables&lt;/code&gt;. I followed &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-using-ip-tables-on-ubuntu-12-04&#34;&gt;this guide&lt;/a&gt;
which gives you a good start. Be sure to run &lt;code&gt;sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT&lt;/code&gt; first.
Otherwise you&amp;rsquo;ll end up blocking your current connection and&amp;hellip; yeah, ok, I made that mistake.&lt;/p&gt;

&lt;p&gt;Then allow what you need and default to dropping the rest. It&amp;rsquo;s all in the URL above, but to re-iterate:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;# Accept connections on port 22
iptables -A INPUT -p tcp --syn --destination-port 22 -j ACCEPT

# Deny all other input
iptables -A INPUT -p tcp -syn -j DROP
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You will need to run the first line for each port that needs to be able to accept
incoming connections.&lt;/p&gt;

&lt;p&gt;I additionally set up &lt;a href=&#34;http://www.zeroflux.org/projects/knock&#34;&gt;knockd&lt;/a&gt; just to play around with it.&lt;/p&gt;

&lt;p&gt;To do this edit &lt;code&gt;/etc/knockd.conf&lt;/code&gt; and set the port sequences. It should have a default
set for enabling and disabling the ssh port. Edit this to reflect any port changes. If you want to run miltiple commands
for a knock, simply concatenate the command with &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;. You can even make one command open
a port for a given time. As we have our *keep established connections&amp;rdquo; rule in &lt;code&gt;iptables&lt;/code&gt; we
can do&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;[opencloseSSH]
        sequence      = 2222:udp,3333:tcp,4444:udp
        seq_timeout   = 15
        tcpflags      = syn,ack
        start_command = /usr/sbin/iptables -A INPUT -s %IP% -p tcp --syn --dport 22 -j ACCEPT
        cmd_timeout   = 10
        stop_command  = /usr/sbin/iptables -D INPUT -s %IP% -p tcp --syn --dport 22 -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Lifted from the docs. This will allow and block only the IP from where the knock originated.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s all for now. Postfix next time&amp;hellip;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>