<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Hack on Unlogic </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://unlogic.co.uk/tags/hack/</link>
    
    
    
    <updated>Fri, 13 Mar 2015 00:00:00 UTC</updated>
    
    <item>
      <title>Let&#39;s crack Bandit Part 1</title>
      <link>http://unlogic.co.uk/2015/03/13/lets-crack-bandit-part1/</link>
      <pubDate>Fri, 13 Mar 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/03/13/lets-crack-bandit-part1/</guid>
      <description>Let&amp;rsquo;s give Bandit from the overthewire war games a going over. I did this a while back, but never really wrote it up, so I&amp;rsquo;m going to do it again and write it up. Remember that you can copy and paste from all the asciinema videos below. Bandit is a CTF/wargame for beginners and a great intro to various linux tools as well. I won&amp;rsquo;t repeat the level summary for each post, instead there&amp;rsquo;s a link to the original page for each section.</description>
    </item>
    
    <item>
      <title>Let&#39;s crack Bandit Part 2</title>
      <link>http://unlogic.co.uk/2015/03/13/lets-crack-bandit-part2/</link>
      <pubDate>Fri, 13 Mar 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/03/13/lets-crack-bandit-part2/</guid>
      <description>Continues on from Let&amp;rsquo;s crack Bandit Part 1 Level 15 -&amp;gt; 16 Level 15 Eventhough this is very similar to the previous level, it&amp;rsquo;s a little more complicated as we need to connect with SSL. The simplest way is using openssl with s_client. Once connected it&amp;rsquo;s the same dance as above bandit15@melinda:~$ openssl s_client -quiet -connect localhost:30001 depth=0 CN = li190-250.members.linode.com verify error:num=18:self signed certificate verify return:1 depth=0 CN = li190-250.members.linode.com verify return:1 BfMYroe26WYalil77FoDi9qh59eK5xNr Correct!</description>
    </item>
    
    <item>
      <title>nmap&#39;s idle scan with scapy</title>
      <link>http://unlogic.co.uk/2014/07/17/nmaps-idle-scan-with-scapy/</link>
      <pubDate>Thu, 17 Jul 2014 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2014/07/17/nmaps-idle-scan-with-scapy/</guid>
      <description>If you&amp;rsquo;ve used nmap before you are probably familiar with its idle scan feature. Should you not be, go and skim the docs. I&amp;rsquo;ll quickly cover the basics here anyway. Basically it will allow us to conduct a port scan of a remote host without revealing our IP address. This is done by making use of the fact that IP IDs are sequential. The images below (courtesy of the namp project documentation) explain this very well.</description>
    </item>
    
  </channel>
</rss>

