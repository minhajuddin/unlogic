<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Vim on Unlogic </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://unlogic.co.uk/tags/vim/</link>
    
    
    
    <updated>Wed, 07 Jan 2015 00:00:00 UTC</updated>
    
    <item>
      <title>Vim settings done better</title>
      <link>http://unlogic.co.uk/2015/01/07/vim-settings-done-better/</link>
      <pubDate>Wed, 07 Jan 2015 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2015/01/07/vim-settings-done-better/</guid>
      <description>Today we&amp;rsquo;ll cover a nice config setup for vim that I use. I got the idea from another blog post elsewhere and I am sorry to say I cannot locate the post right now. If you know of it, please leave a comment below and I will add it to the post as a credit. I say &amp;lsquo;better&amp;rsquo; rather than &amp;lsquo;right&amp;rsquo; because I don&amp;rsquo;t believe there&amp;rsquo;s necessarily a right way to do it, only bad and better.</description>
    </item>
    
    <item>
      <title>YouCompleteMe</title>
      <link>http://unlogic.co.uk/2013/11/07/you-complete-me/</link>
      <pubDate>Thu, 07 Nov 2013 12:50:23 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2013/11/07/you-complete-me/</guid>
      <description>&lt;p&gt;If you haven&amp;rsquo;t heard of the YouCompleteMe plugin for Vim, headover to
&lt;a href=&#34;http://valloric.github.io/YouCompleteMe/&#34;&gt;http://valloric.github.io/YouCompleteMe/&lt;/a&gt; and take a look.
It&amp;rsquo;s a very competent auto completer for a variety of languages. But as always the C style completer takes
a little bit of work to get going. So just for you, I&amp;rsquo;ve written up how I managed to get it to work
on 64bit Centos 6.2.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vim as a Python IDE</title>
      <link>http://unlogic.co.uk/2013/02/08/vim-as-a-python-ide/</link>
      <pubDate>Fri, 08 Feb 2013 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2013/02/08/vim-as-a-python-ide/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been spending quite a bit of time with our good old buddy Python recently, and when
I do, I always invite along our mutual friend Vim. He&amp;rsquo;s a barrell of laughs and always
knows of a quicker way to do things. So I&amp;rsquo;ve been getting the two acquainted more and more
and Vim&amp;rsquo;s turned into a totally different person. So I am going to share with you how
I setup Vim as my tool of choice when working with Python code. It&amp;rsquo;s by no means the
definitive way of working, but it works for me. I know there&amp;rsquo;s quite a few posts similar to this one,
but these are the tools &lt;strong&gt;I&lt;/strong&gt; find useful and use. If you have some suggestions, comments, or
know of additional tools that might be useful, I would like to hear about them in the comments
below.&lt;/p&gt;

&lt;p&gt;If you are a Vim user you might find this useful. If you are new to Vim I suggest spending some
time with it before installing any plugins. That way you get used to how Vim works out of the box.
Once you&amp;rsquo;re comfortable with using it, and you&amp;rsquo;ve gotten to grips with the Vim-way, go ahead and
install some extras.&lt;/p&gt;

&lt;p&gt;Right, let&amp;rsquo;s get started.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>vim clang autocompletion</title>
      <link>http://unlogic.co.uk/2012/07/13/vim-clang/</link>
      <pubDate>Fri, 13 Jul 2012 00:00:00 UTC</pubDate>
      
      <guid>http://unlogic.co.uk/2012/07/13/vim-clang/</guid>
      <description>&lt;p&gt;Code completion. Isn&amp;rsquo;t it nice? Especially when you have a so many APIs that you can&amp;rsquo;t always remember EVERY method, member or class name in it.&lt;/p&gt;

&lt;p&gt;Vim. Isn&amp;rsquo;t it powerful? The ease and speed with which it allows you to edit your code and do your work is just lovely.&lt;/p&gt;

&lt;p&gt;But code completion in vim? Well yes. You can use ctags. Yes, you can make tag files for ALL your APIs and autocompletion works rather well. I did this and the Qt tags file is 1.7GB. So, urm yeah, that&amp;rsquo;s not entirely awesome either. Plus it doesn&amp;rsquo;t handle things like smart pointers, which you will no doubt come across at some stage.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

